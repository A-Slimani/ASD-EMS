{"version":3,"sources":["components/WebLayout.js","Dashboard.js","Login.js","Logout.js","services/Employee.js","UserList.js","AddUser.js","components/EmployeeWebLayout.js","discussionBoard.js","PaymentPolicy.js","FileComplaint.js","Application.js","ApplicationList.js","PayrollHistory.js","UpdateEmployee.js","ComplaintList.js","Personal.js","EmployeeDashboard.js","UpdatePolicy.js","AddPayroll.js","ConcernList.js","Profile.js","EmployeePersonal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Footer","Sider","Content","SubMenu","Menu","WebLayout","content","style","minHeight","className","theme","defaultSelectedKeys","mode","Item","icon","PieChartOutlined","to","UserOutlined","title","TeamOutlined","FileOutlined","CommentOutlined","DesktopOutlined","RobotOutlined","LoginOutlined","padding","color","textAlign","fontSize","margin","Dashboard","fontWeight","textDecorationLine","paddingBottom","Login","useState","username","setUsername","password","setPassword","history","useHistory","handleSubmit","e","preventDefault","test","push","name","isEmployee","pathname","state","alert","height","alignItems","justifyContent","direction","mb","background","p","rounded","onSubmit","id","placeholder","variant","onChange","target","value","type","colorScheme","disabled","length","onClick","Logout","baseUrl","axios","get","then","response","data","Column","Table","employees","setEmployees","useEffect","employeeService","dataSource","dataIndex","render","split","UserList","AddUser","required","maxLength","minLength","for","paddingTop","isNumber","n","isText","text","window","confirm","fname","document","forms","lname","dob","pwd","phoneno","accname","accnum","accbsb","address","suburb","pcode","employtype","employdate","dept","Date","getFullYear","location","getElementById","reset","EmployeeWebLayout","date","method","DiscussionBoard","PaymentPolicy","paddingLeft","FileComplaint","Application","ApplicationList","class","PayrollHistory","float","back","defaultValue","pattern","maxlength","checked","UpdateEmployee","ComplaintList","Personal","href","EmployeeDashboard","cols","rows","amount","bonus","description","ConcernList","Profile","EmployeePersonal","App","exact","path","AddPayroll","UpdatePolicy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.df6021e4.chunk.js","sourcesContent":["import { Layout, Menu, Breadcrumb } from 'antd';\nimport { DesktopOutlined, PieChartOutlined, FileOutlined, TeamOutlined, UserOutlined, CommentOutlined, LoginOutlined, RobotOutlined } from '@ant-design/icons';\nimport './Dashboard.css';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst WebLayout = ({ content }) => {\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['menu1']} mode=\"inline\">\n          <Menu.Item key=\"menu1\" icon={<PieChartOutlined />}>\n            <Link to=\"./Dashboard\"> <button> Home </button>{' '}</Link>\n          </Menu.Item>\n\n          <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Employee Manage\">\n            <Menu.Item key=\"3\">{' '} <Link to=\"./AddUser\"> <button> Add Employee</button>{' '}</Link></Menu.Item>\n            <Menu.Item key=\"2\">{' '} <Link to=\"./UserList\"> <button> Employee List </button>{' '}</Link>{' '}</Menu.Item>\n          </SubMenu>\n\n          <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Payroll Manage\">\n            <Menu.Item key=\"4\"> <Link to=\"./AddPayroll\"> <button> New Payroll </button></Link></Menu.Item>\n            <Menu.Item key=\"5\"> <Link to=\"./PayrollHistory\"> <button> Payroll History </button> </Link> </Menu.Item>\n            {/* <Menu.Item key=\"5\"> <Link to=\"./PayrollLog\"> <button> Payroll Log </button></Link></Menu.Item> */}\n            <Menu.Item key=\"6\">{' '} <Link to=\"./PaymentPolicy\"><button> Payment Policy</button></Link></Menu.Item>\n          </SubMenu>\n\n          <SubMenu key=\"sub3\" icon={<FileOutlined />} title=\"Applications\">\n            {/* <Menu.Item key=\"7\"> <Link to=\"Application\"> <button> Launch Application </button> </Link></Menu.Item> */}\n            <Menu.Item key=\"8\">{' '} <Link to=\"./ApplicationList\"><button> Manage Application </button></Link></Menu.Item>\n          </SubMenu>\n\n          <SubMenu key=\"sub4\" icon={<CommentOutlined />} title=\"Complaints\">\n            {/* <Menu.Item key=\"9\"> <Link to=\"./FileComplaint\"> <button> File Complaint </button>{' '}</Link> </Menu.Item> */}\n            <Menu.Item key=\"10\"> {' '} <Link to=\"./ComplaintList\"> <button> Manage Complaints </button> </Link></Menu.Item>\n          </SubMenu>\n\n          <Menu.Item key=\"menu2\" icon={<DesktopOutlined />}>\n            <Link to=\"./ConcernList\"> <button> Concern Manage </button>{' '} </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu3\" icon={<RobotOutlined />}>\n            <Link to=\"./Personal\"> <button> Personal File </button>{' '} </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu4\" icon={<LoginOutlined />}>\n            <Link to=\"./Logout\"> <button> Logout </button>{' '}</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          <h1 style={{ color: 'white', textAlign: 'center', fontSize: '20px' }}>\n            Employee Management System\n          </h1>\n        </Header>\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>User</Breadcrumb.Item>\n            <Breadcrumb.Item>Admin</Breadcrumb.Item>\n          </Breadcrumb>\n          {content}\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          @Copyright 2021 - ASD Group 6 <br />\n          My Duong, Catherine Pe Benito, George Hetrelezis, Reagan Brasch, Abdullah Slimani, Asif Bin Kabir\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default WebLayout;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\n\nconst testText = () => {\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Hello, Admin </h1>\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> Annoucement </h2>\n      <li>\n        System maintenance is due at midnight to tomorrow 7am. Ensure not to use the system during the maintenance time\n        as changed information may not be saved.\n      </li>\n      <li> Starting next year, a new payment policy is apply. Please read the new policy in the \"Payment Policy\" page. </li>\n      <li> End of year party ticket is open, date and time is to be annouce. </li>\n      <br /><p />\n\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> General Information </h2>\n      <li>\n        As an employee from the Human Resource (HR) department, also known as the admin in the EMS system, you have the\n        priviledge to view, add, delete and modify employees as well as your personal information.\n      </li>\n      <li>\n        As an EMS user, it is your responsibilities to ensure that all the provided information are accurate, relevant and recent.\n        Thus, all submitted applications and complaints are valid and reasonable.\n      </li>\n      <li>\n        As an admin, it is your responsibilities to assess the information\n        where all submitted applications and complaints will be required to be assessed before approving/decline.\n      </li>\n      <li>\n        EMS users are expected to visit and check the system regularly for new/updated information\n        such as changes in application and complaints status or simply daily annoucement.\n      </li>\n      <br /><p />\n\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> Navigation in EMS </h2>\n      <p>\n        The navigations are categorised into groups including:\n        <li> Employee Manage - Employee List, Add New Employee </li>\n        <li> Payroll Manage - Payroll History, Log and Payment Policy </li>\n        <li> Application - Launch and Manage Application </li>\n        <li> Complaints - File and Manage Complaints </li>\n        <li> Concern Manage - Manage Concerns from Employee </li>\n        <li> Personal File - View information including: personal, logtime, pay history, submmited application and compliants </li>\n      </p>\n\n      <p>\n        <br></br>\n        <i>Many thanks,</i>\n        <br></br>\n        Martin Lym <br></br>\n        <br></br>\n        Human Resources Manager <br></br>\n        <b>Enterprise Management Systems</b>\n      </p>\n\n    </div>\n  );\n};\n\nconst Dashboard = () => {\n  return <WebLayout content={testText()} />;\n};\n\nexport default Dashboard;\n","import { Button, Flex, Heading, Input, FormControl, Spacer } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const validateForm = () => {\n    return username.length > 0 && password.length > 0;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    function isAdmin(name) { return /^-?[a-zA-Z0-9._%+-]+@EMS[HR]{2}$/.test(name); }\n    function isEmployee(name) { return /^-?[a-zA-Z0-9._%+-]+@EMS[OP,MK,FN]{2}$/.test(name); }\n\n    // this is a login validate to redirect to 2 different dashboard\n    // before this validate will have to verify username and password with the database\n    // the username format is ...@EMSHR, ...@EMSFN, ...@EMSMK, or ...@EMSOP\n    // the last 2 initial refers to departments - HR is admin while the other 3 are employee\n\n    // if username end with HR - view admin dashboard and navbar\n    // if username end with OP, MK or FN - view employee dashboard and navbar\n    // if username end is not HR, OP, MK, or FN - user unable to login\n    // if username/password entered not match data in database - user unable to login - this is after connect the page to database\n    \n    // try example@EMSHR and example@EMSOP to see the difference\n\n    if (isAdmin(username) === true) {\n      history.push('./Dashboard');\n    }\n    else if (isEmployee(username) === true) {\n      history.push({\n        pathname: './EmployeeDashboard',\n        state: username\n      });\n    }\n    else {\n      alert('Incorrect username and/or password');\n    }\n  };\n\n  return (\n    <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n      <Heading mb={20}> Employee Management System </Heading>\n      <Flex direction=\"column\" background=\"gray.100\" p={12} rounded={6}>\n        <Heading mb={6}>Log in</Heading>\n        <FormControl onSubmit={handleSubmit} id=\"loginform\" name=\"loginform\" >\n          <Input\n            placeholder=\"Username\"\n            name=\"username\"\n            id = \"username\"\n            variant=\"filled\"\n            onChange={e => setUsername(e.target.value)}\n            mb={3}\n          />\n          <Input\n            placeholder=\"Password\"\n            variant=\"filled\"\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            mb={6}\n          />\n        </FormControl>\n        <Flex direction=\"row\">\n          <Button colorScheme=\"teal\" disabled={!validateForm()} onClick={handleSubmit}>\n            Log in\n          </Button>\n          <Spacer />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Login;\n","import { Button, Flex, Heading, Spacer } from '@chakra-ui/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Logout = () => {\n  return (\n    <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n      <Heading mb={20}> Employee Management System </Heading>\n      <Flex direction=\"column\" background=\"gray.100\" p={12} rounded={6}>\n        <Heading mb={6}> You have logged out of EMS </Heading>\n\n        <Flex direction=\"row\">\n          <Link to=\"/\"> <Button colorScheme=\"teal\">\n            Log in\n          </Button> </Link>\n          <Spacer />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Logout;\n","import axios from \"axios\";\nconst baseUrl = \"/api/employees\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObj => {\n  return axios.post(baseUrl, newObj);\n};\n\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };","import { Button, Divider, Space, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport WebLayout from './components/WebLayout';\nimport employeeService from \"./services/Employee\";\n\nconst { Column } = Table;\n\nconst Content = () => {\n  const [employees, setEmployees] = useState([])\n\n  useEffect(() => {\n    employeeService.getAll().then(employees => {\n      setEmployees(employees)\n    })\n  }, [])\n\n  return (\n    <>\n      <Table dataSource={employees}>\n        <Column title=\"Employee ID\" dataIndex=\"id\" key=\"id\"/>\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\"/>\n        <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\"/>\n        <Column title=\"Employment Type\" dataIndex=\"employmentType\" key=\"employmentType\"/>\n        <Column title=\"Employment Type\" dataIndex=\"Username\" key=\"Username\"/>\n        <Column title=\"Options\" key=\"id\" render={(p) => (\n          <>\n          <Space split={<Divider type=\"vertical\" />}>\n            <Button>view</Button>\n            <Link to=\"./UpdateEmployee\"><Button>update </Button></Link>\n            <Button>delete</Button>\n          </Space>\n          </>\n        )}/>\n      </Table>\n    </>\n  );\n};\n\nconst UserList = () => {\n  return <WebLayout content={Content()} />;\n};\n\nexport default UserList;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\n\nconst content = () => {\n  function handleSubmit(e) {\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); }\n    function isName(name) { return /^-?[a-zA-Z0-9._%+-]+@EMS[HR,OP,MK,FN]{2}$/.test(name); }\n    function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n    e.preventDefault();\n    var s = window.confirm(\"Do you want add a new user with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to reset form\");\n    if (s === true) {\n      var fname = document.forms[\"registerform\"][\"fname\"].value;\n      var lname = document.forms[\"registerform\"][\"lname\"].value;\n      var dob = document.forms[\"registerform\"][\"dob\"].value;\n      var username = document.forms[\"registerform\"][\"username\"].value;\n      var pwd = document.forms[\"registerform\"][\"pwd\"].value;\n      var phoneno = document.forms[\"registerform\"][\"phoneno\"].value;\n      var accname = document.forms[\"registerform\"][\"accname\"].value;\n      var accnum = document.forms[\"registerform\"][\"accnum\"].value;\n      var accbsb = document.forms[\"registerform\"][\"bsb\"].value;\n      var address = document.forms[\"registerform\"][\"address\"].value;\n      var suburb = document.forms[\"registerform\"][\"suburb\"].value;\n      var state = document.forms[\"registerform\"][\"state\"].value;\n      var pcode = document.forms[\"registerform\"][\"pcode\"].value;\n      var employtype = document.forms[\"registerform\"][\"employtype\"].value;\n      var employdate = document.forms[\"registerform\"][\"employdate\"].value;\n      var dept = document.forms[\"registerform\"][\"dept\"].value;\n\n      if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n      else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n      else if (dob === \"\") { alert(\"Date of Birth field must be select\"); }\n      else if (username === \"\" || isName(username) === false) { alert(\"Username field is empty or invalid format input \\n\\n Follow the given format\"); }\n      else if (pwd === \"\") { alert(\"Password field must be filled out\"); }\n      else if (phoneno === \"\" || isNumber(phoneno) === false) { alert(\"Contact Number field is empty or invalid format input\"); }\n      else if (accname === \"\" || isText(accname) === false) { alert(\"Account Name field is empty or invalid format input\"); }\n      else if (accnum === \"\" || isNumber(accnum) === false) { alert(\"Account Number is empty or invalid format input\"); }\n      else if (accbsb === \"\" || isNumber(accbsb) === false) { alert(\"Account BSB field is empty or invalid format input\"); }\n      else if (address === \"\") { alert(\"Address field is empty or invalid format input\"); }\n      else if (suburb === \"\" || isText(suburb) === false) { alert(\"Suburb field is empty or invalid format input\"); }\n      else if (state === \"\" || isText(state) === false) { alert(\"State field is empty or invalid format input\"); }\n      else if (pcode === \"\" || isNumber(pcode) === false) { alert(\"Post Code is empty or invalid format input\"); }\n      else if (employtype === \"\") { alert(\"Employement Type must be select\"); }\n      else if (employdate === \"\") { alert(\"Employement Date must be select\"); }\n      else if (dept === \"\") { alert(\"Department must be select\"); }\n      else if (dob > employdate) { alert(\"Invalid date of birth and employment date\"); }\n      else if ((new Date().getFullYear() - new Date(dob).getFullYear()) <= 18) { alert(\"Employee age must be 18 or over\"); }\n      else { window.location = \"./UserList\"; }\n    }\n    else { document.getElementById(\"registerform\").reset(); }\n  }\n\n  return (\n    <>\n      <div>\n        <form id='registerform' name='registerform'>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Add New User </h1>\n          <p style={{ textAlign: 'center' }}> {' '} Please fill out the details below, all fields are required{' '} </p>\n\n          <label> First Name: </label>\n          <small>Up to 255 Characters </small> <p> </p>\n          <input type=\"text\" placeholder=\"First Name\" name=\"fname\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Last Name: </label> <small>Up to 255 Characters </small> <p></p>\n          <input type=\"text\" placeholder=\"Last Name\" name=\"lname\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Date of Birth: </label>{' '}\n          <small> Use the calendar on the right </small> <p />\n          <input type=\"date\" placeholder=\"DD/MM/YYYY\" name=\"dob\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Username: </label> <br />\n          <small>\n            <i>\n              After @ must be the system name 'EMS' followed by one department  initial:\n              HR - Human Resource, OP - Operation, MK - Marketing, FN - Finance </i>\n          </small>{' '}\n          <p />\n          <input type=\"email\" placeholder=\"example@EMSHR\" name=\"username\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Password: </label>{' '}\n          <small> Maximum password length is 16 Characters </small> <p />\n          <input type=\"password\" placeholder=\"Password\" maxLength=\"16\" name=\"pwd\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Contact Number: </label> <small> Up to 10 digits </small> <p />\n          <input type=\"text\" placeholder=\"Phone Number\" name=\"phoneno\" maxLength=\"10\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Bank Account Name: </label> <small> Up to 255 Characters </small>\n          <p />\n          <input type=\"text\" placeholder=\"Full Name\" name=\"accname\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Bank Account Number: </label>\n          <small> Up to 10 Digits </small>\n          <p />\n          <input type=\"text\" placeholder=\"Account Number without space\" name=\"accnum\" minLength=\"6\" maxLength=\"10\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> BSB: </label>\n          <small> Up to 6 Digits </small>\n          <p />\n          <input type=\"text\" placeholder=\"BSB without space\" name=\"bsb\" maxLength=\"6\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Address: </label> <small> Up to 255 Characters </small> <p />\n          <input type=\"text\" placeholder=\"Address\" maxLength=\"255\" name=\"address\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Suburb: </label> <small>Up to 255 Characters </small> <p />\n          <input type=\"text\" placeholder=\"Suburb\" maxLength=\"255\" name=\"suburb\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> State: </label> <small> Up 3 Character </small> <p />\n          <input type=\"text\" placeholder=\"State\" name=\"state\" maxLength=\"3\" className=\"formtextfield\" required />{' '}\n          <br />\n          <label> Post Code: </label> <small> Up 4 Digits </small> <p />\n          <input type=\"text\" placeholder=\"Post Code\" name=\"pcode\" maxLength=\"4\" className=\"formtextfield\" required />{' '}\n          <p />\n          <label> Employment Type: </label> <p />\n          <input type=\"radio\" id=\"html\" name=\"employtype\" value=\"fulltime\" />\n          <label for=\"fulltime\"> Full Time </label> <p />\n          <input type=\"radio\" id=\"css\" name=\"employtype\" value=\"parttime\" />\n          <label for=\"parttime\"> Part Time </label>\n          <p />\n          <input type=\"radio\" id=\"javascript\" name=\"employtype\" value=\"casual\" />\n          <label for=\"casual\"> Casual Worker </label> <p />\n          <label> Employment Date: </label>{' '}\n          <small> Use the calendar on the right </small> <p />\n          <input type=\"date\" placeholder=\"DD/MM/YYYY\" name=\"employdate\" className=\"formtextfield\" required />{' '}\n          <p />\n          <label> Department: </label> <br />\n          <select name=\"dept\" className=\"formtextfield\" required>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"finance\"> Finance </option>\n            <option value=\"HR\"> Human Resource </option>\n            <option value=\"marketing\"> Marketing </option>\n            <option value=\"operation\"> Operation </option>\n          </select>{' '}\n          <p />\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit}> Create New User </button>{' '}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst AddUser = () => {\n  return <WebLayout content={content()} />;\n};\n\nexport default AddUser;\n","import { Layout, Menu, Breadcrumb } from 'antd';\nimport { DesktopOutlined, PieChartOutlined, FileOutlined, CommentOutlined, LoginOutlined, RobotOutlined } from '@ant-design/icons';\nimport './Dashboard.css';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst EmployeeWebLayout = ({ content }) => {\n  return (\n    <Layout style={{ minHeight: '100vh' }} name=\"emplayout\" >\n      <Sider>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['menu1']} mode=\"inline\">\n          <Menu.Item key=\"menu1\" icon={<PieChartOutlined />}>\n            <Link to=\"./EmployeeDashboard\"> <button> Home </button>{' '}</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu2\" icon={<FileOutlined />}>\n            <Link to=\"./Application\"> <button name='applaunch'> Launch Application </button>{' '}</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu3\" icon={<CommentOutlined />}>\n            <Link to=\"./FileComplaint\"> <button> File Complaint </button>{' '}</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu4\" icon={<DesktopOutlined />}>\n            <Link to=\"./discussionBoard\"> <button> Voice Concern </button>{' '}</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu5\" icon={<RobotOutlined />}>\n            <Link to=\"./EmployeePersonal\"> <button> Personal File </button>{' '}</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu6\" icon={<LoginOutlined />}>\n            <Link to=\"./Logout\"> <button> Logout </button>{' '}</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          <h1 style={{ color: 'white', textAlign: 'center', fontSize: '20px' }}>\n            Employee Management System\n          </h1>\n        </Header>\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>User</Breadcrumb.Item>\n            <Breadcrumb.Item>Employee</Breadcrumb.Item>\n          </Breadcrumb>\n          {content}\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          @Copyright 2021 - ASD Group 6 <br />\n          My Duong, Catherine Pe Benito, George Hetrelezis, Reagan Brasch, Abdullah Slimani, Asif Bin Kabir\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default EmployeeWebLayout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport EmployeeWebLayout from \"./components/EmployeeWebLayout\";\n\nconst content = () => {\n  var date = new Date();\n\n  return (\n    <div>\n      <form method=\"POST\" className=\"form\" name=\"dicussform\">\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Voice Concern </h1>\n        <p style={{ textAlign: 'center' }}> We are hearing you voice !!! </p>\n        <label> Date and Time: </label>\n        <input type=\"text\" value={date} name=\"formdate\" className=\"formtextfield\" disabled />\n        <label> Name: </label> <br />\n        <input type=\"text\" placeholder=\"Name can be anonymous\" name=\"anonymous\" className=\"formtextfield\" />{' '}\n        <br />\n        <p />\n        <label> Topic: </label> <br />\n        <input type=\"text\" placeholder=\" \" name=\"topic\" className=\"formtextfield\" />{' '}\n        <br />\n        <p />\n        <label> What are you trying to achieve ? </label> <br />\n        <textarea type=\"text\" placeholder=\"Message\" name=\"content\" className=\"formtextfield\" />{' '}\n        <br />\n        <p />\n        <label> How differently you can do ? </label> <br />\n        <textarea type=\"text\" placeholder=\"Message\" name=\"content\" className=\"formtextfield\" />{' '}\n        <br />\n        <p />\n        <div style={{ textAlign: 'center', paddingTop: 10 }}>\n        <Link to=\"./discussionBoard\"> {' '} <button type='submit' className=\"button\"> Post </button>{' '}</Link>\n      </div>\n      </form>\n      \n    </div>\n  );\n};\n\nconst DiscussionBoard = () => {\n  return <EmployeeWebLayout content={content()} />;\n};\n\nexport default DiscussionBoard;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\n\nconst content = () => {\n  return (\n    <div>\n      <h1 style={{ fontSize: '30px', textAlign: 'center' }}>\n        {' '}\n        <b>Payment Policy</b>{' '}\n      </h1>\n      <p style={{ fontSize: '20px', paddingLeft: '45px', paddingTop: '50px', textAlign: 'left',}}>\n        {' '}\n        Enterprise Management Systems reflects that by purchasing our Employee Management\n        System, you will be agreeing to the following terms and conditions:\n        <li style={{ paddingLeft: '20px' }}>\n          Any refunds required are to be completed within 20 business days, in which you\n          will no longer have access to the Employee Management System, its database, or\n          the Enterprise Systems Management servers.\n        </li>\n        <li style={{ paddingLeft: '20px' }}>\n          Issues pertaining to the initial installation of the Employee Management System\n          are to be brought up with the Enterprise Management Systems Admin (Human\n          Resources) team, and may not be used to confirm a refund within the 20 business\n          day period.\n        </li>\n      </p>\n      <p\n        style={{\n          fontSize: '20px',\n          paddingLeft: '45px',\n          paddingTop: '50px',\n          textAlign: 'left',\n        }}>\n        {' '}\n        Enterprise Management Systems also reflects that by using our Employee Management\n        System, you will be agreeing to the following terms and conditions:\n        <li style={{ paddingLeft: '20px' }}>\n          Enterprise Management Systems reserves the right to not be held responsible for\n          loss of information, both pertaining to and not pertaining to payment\n          information from the use of the Employment Management System.\n        </li>\n        <li style={{ paddingLeft: '20px' }}>\n          That any issues regarding payments is to go directly to the Admin (Human\n          Resources) team to ensure the issue is dealt with correctly.{' '}\n        </li>\n        <li style={{ paddingLeft: '20px' }}>\n          That delays in payment are to be sent to the Enterprise Management Systems Admin\n          (Human Resources) team within 5 business days.\n        </li>\n        <li style={{ paddingLeft: '20px' }}>\n          That you accept and comply with the respective jurisdiction for any, and all\n          disputes that may arise and relate to Enterprise Management Systems.\n        </li>\n        <li style={{ paddingLeft: '20px' }}>\n          That you accept that Enterprise Management Systems reserves the right to\n          change/update company policies and regulations.{' '}\n        </li>\n        <p>\n          <br></br>\n          <i>Many thanks,</i>\n          <br></br>\n          Martin Lym <br></br>\n          <br></br>\n          Human Resources Manager <br></br>\n          <b>Enterprise Management Systems</b>\n        </p>\n      </p>\n      <div style={{ textAlign: 'center', paddingTop: 10 }}>\n      <Link to=\"./UpdatePolicy\"> <button className=\"button\"> Update Policy </button> </Link>\n      </div>\n    </div>\n  );\n};\n\nconst PaymentPolicy = () => {\n  return <WebLayout content={content()} />;\n};\n\nexport default PaymentPolicy;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\nimport EmployeeWebLayout from './components/EmployeeWebLayout';\n\nconst content = () => {\n  var date = new Date();\n\n  return (\n    <>\n      <div style={{ textAlign: 'center', fontSize: 30 }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> File Complaints </h1>\n        <p />\n      </div>\n\n      <div>\n        <form method=\"POST\" className=\"form\" name=\"complaintform\">\n          <label> Date and Time: </label> <br />\n          <input type=\"text\" value={date} name=\"formdate\" className=\"formtextfield\" disabled />\n          <label> Employee ID </label> <br />\n          <input type=\"text\" name=\"eid\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <label> First Name: </label> <br />\n          <input type=\"text\" name=\"fname\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <label> Last Name: </label> <br />\n          <input type=\"text\" name=\"lastname\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <label> Type of Complaint: </label> <br />\n          <select name=\"complainttype\" className=\"formtextfield\" required>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"personal\"> Personal </option>\n            <option value=\"work\"> Work </option>\n            <option value=\"general\"> General </option>\n            <option value=\"suggestion\"> Suggestion </option>\n          </select>{' '}\n\n          <label> Description </label> <br />\n          <textarea type=\"text\" placeholder=\"Message\" name=\"complaintdescription\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <small> The application process may takes up to 3-5 business days </small> <br />\n            <small> User may check their submitted applications in the personal file </small> <br />\n            <Link to=\"./ComplaintList\">{' '} <button type='submit' className=\"button\"> Submit </button>{' '} </Link>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst FileComplaint = () => {\n  // return <WebLayout content={content()} />;\n  return <EmployeeWebLayout content={content()} />;\n};\n\nexport default FileComplaint;\n","import React from 'react';\n// import WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\nimport EmployeeWebLayout from './components/EmployeeWebLayout';\n\nconst content = () => {\n  var date = new Date();\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Launch Application </h1>\n        <p />\n      </div>\n\n      <div>\n        <form method=\"POST\" className=\"form\" name=\"complaintform\">\n          <label> Date and Time: </label> <br />\n          <input type=\"text\" value={date} name=\"formdate\" className=\"formtextfield\" disabled />\n          <label> Employee ID: </label> <br />\n          <input type=\"text\" name=\"eid\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <label> First Name: </label> <br />\n          <input type=\"text\" name=\"fname\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <label> Last Name: </label> <br />\n          <input type=\"text\" name=\"lastname\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <label> Type of Application: </label> <br />\n          <select name=\"complainttype\" className=\"formtextfield\" required>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"transfer\"> Transfer between Departments </option>\n            <option value=\"claim\"> Business Claims </option>\n            <option value=\"leave\"> Apply Leave </option>\n            <option value=\"resign\"> Resignation </option>\n            <option value=\"other\"> Others </option>\n          </select>{' '}\n\n          <label> Sub-Category: </label> <br />\n          <textarea type=\"text\" placeholder=\"Provide detailed description of the application\" name=\"subcategory\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <label> Reason </label> <br />\n          <textarea type=\"text\" placeholder=\"Provide detailed and valid reason\" name=\"reason\" className=\"formtextfield\" required />{' '}\n          <br /> <p />\n\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <small>\n              The application process may takes up to 3-5 business days <br />\n              User may check their submitted applications in the personal file\n            </small> <br />\n            <Link to=\"./ApplicationList\">\n              <button type='submit' className=\"button\"> Submit </button>{' '}\n            </Link>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst Application = () => {\n  // return <WebLayout content={content()} />;\n  return <EmployeeWebLayout content={content()} />;\n};\n\nexport default Application;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\n\nconst content = () => {\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> All Applications </h1>\n        <input type=\"number\" placeholder=\"Application ID\" name=\"requestedid\" class=\"textfield\" />\n        <input type=\"textfield\" placeholder=\"Name\" name=\"requestedfn\" class=\"textfield\" />\n        <input type=\"date\" name=\"requesteddate\" class=\"textfield\" />\n        <button className=\"button\" name=\"searchbtn\" type=\"submit\">\n          {' '}\n          Search{' '}\n        </button>{' '}\n        <p />\n      </div>\n\n      <div>\n        <table className=\"table\">\n          <tr>\n            <th> Application ID </th>\n            <th> Name </th>\n            <th> Description </th>\n            <th> Reason </th>\n            <th> Owner </th>\n            <th> Date Submitted </th>\n            <th> Status </th>\n            <th> Option </th>\n          </tr>\n\n          <tr>\n            <td> 1 </td>\n            <td> Transfer </td>\n            <td> Transfer from HR to OP </td>\n            <td> Why? </td>\n            <td> Bill </td>\n            <td> dd/mm/yyyy </td>\n            <td>\n              {' '} Pending <br /> Approved <br /> Rejected {' '}\n            </td>\n            <td>\n              {' '}\n              <Link to=\"#\"> Approved </Link> <br />{' '}\n              <Link to=\"#\"> Rejected </Link>{' '}\n            </td>\n          </tr>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst ApplicationList = () => {\n  return <WebLayout content={content()} />;\n};\n\nexport default ApplicationList;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\n\nconst content = () => {\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Payroll History </h1>\n        <input type=\"number\" placeholder=\"Payroll ID\" name=\"requestedid\" class=\"textfield\" />\n        <input type=\"textfield\" placeholder=\"Name\" name=\"requestedfn\" class=\"textfield\" />\n        <input type=\"number\" placeholder=\"Salary Range (Min.)\" name=\"Min Salary\" class=\"textfield\" />\n        <input type=\"number\" placeholder=\"Salary Range (Max.)\" name=\"Max Salary\" class=\"textfield\" />\n        <button className=\"button\" name=\"searchbtn\" type=\"submit\"> {' '} Search {' '} </button>{' '}\n        <p />\n\n        <button className=\"button\" name=\"addnew\" type=\"submit\">\n          <Link to=\"./AddPayroll\"> <button> Add New Payroll</button></Link>\n        </button>\n      </div>\n\n      <table className=\"table\">\n        <tr>\n          <th> Payroll ID </th>\n          <th> Employee Name </th>\n          <th>Amount </th>\n          <th> Bonus </th>\n          <th> Payment Method </th>\n          <th> Pay Date </th>\n          <th> Option </th>\n        </tr>\n        <tr>\n          <td>1</td>\n          <td>Bob Rob</td>\n          <td>100</td>\n          <td>100</td>\n          <td>Cash</td>\n          <td>23/07/2017</td>\n          <td><Link to=\"#\"> <button> Delete</button></Link> </td>\n\n        </tr>\n        <tr>\n          <td>2</td>\n          <td>Bob Loss</td>\n          <td>200</td>\n          <td>100</td>\n          <td>Cheque</td>\n          <td>19/09/2015</td>\n          <td><Link to=\"#\"> <button> Delete</button></Link> </td>\n        </tr>\n        <tr>\n          <td>3</td>\n          <td>Bob Toss</td>\n          <td>300</td>\n          <td>200</td>\n          <td>EFTPOS</td>\n          <td>19/09/2015</td>\n          <td><Link to=\"#\"> <button> Delete</button></Link> </td>\n        </tr>\n      </table>\n    </>\n  );\n};\n\nconst PayrollHistory = () => {\n  return <WebLayout content={content()} />;\n};\n\nexport default PayrollHistory;\n","import './style.css';\nimport WebLayout from './components/WebLayout'\nimport React, { useState } from 'react';\n\nconst Content = () => {\n  const [employee, setEmployee] = useState([])\n\n  function goBack(e) {\n    e.preventDefault();\n    var option = window.confirm(\"Do you want leave the page?\\n\\nSelect OK to go back and data will not be saved\\n\\nSelect CANCEL to remain on the page\")\n    if (option === true) { window.history.back(); }\n  }\n\n  function handleSubmit(e) {\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); }\n    function isName(name) { return /^-?[a-zA-Z0-9._%+-]+@EMS[HR,OP,MK,FN]{2}$/.test(name) }\n    function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n    e.preventDefault();\n    var s = window.confirm(\"Do you update the information with entered data?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to remain on the page\");\n    if (s === true) {\n      var fname = document.forms[\"updateform\"][\"fname\"].value;\n      var lname = document.forms[\"updateform\"][\"lname\"].value;\n      var dob = document.forms[\"updateform\"][\"dob\"].value;\n      var username = document.forms[\"updateform\"][\"username\"].value;\n      var pwd = document.forms[\"updateform\"][\"pwd\"].value;\n      var phoneno = document.forms[\"updateform\"][\"phoneno\"].value;\n      var accname = document.forms[\"updateform\"][\"accname\"].value;\n      var accnum = document.forms[\"updateform\"][\"accnum\"].value;\n      var accbsb = document.forms[\"updateform\"][\"bsb\"].value;\n      var address = document.forms[\"updateform\"][\"address\"].value;\n      var suburb = document.forms[\"updateform\"][\"suburb\"].value;\n      var state = document.forms[\"updateform\"][\"state\"].value;\n      var pcode = document.forms[\"updateform\"][\"pcode\"].value;\n      var employtype = document.forms[\"updateform\"][\"employtype\"].value;\n      var employdate = document.forms[\"updateform\"][\"employdate\"].value;\n      var dept = document.forms[\"updateform\"][\"dept\"].value;\n\n      if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n      else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n      else if (dob === \"\") { alert(\"Date of Birth field must be select\"); }\n      else if (username === \"\" || isName(username) === false) { alert(\"Username field is empty or invalid format input \\n\\n Follow the given format\"); }\n      else if (pwd === \"\") { alert(\"Password field must be filled out\"); }\n      else if (phoneno === \"\" || isNumber(phoneno) === false) { alert(\"Contact Number field is empty or invalid format input\"); }\n      else if (accname === \"\" || isText(accname) === false) { alert(\"Account Name field is empty or invalid format input\"); }\n      else if (accnum === \"\" || isNumber(accnum) === false) { alert(\"Account Number is empty or invalid format input\"); }\n      else if (accbsb === \"\" || isNumber(accbsb) === false) { alert(\"Account BSB field is empty or invalid format input\"); }\n      else if (address === \"\") { alert(\"Address field is empty or invalid format input\"); }\n      else if (suburb === \"\" || isText(suburb) === false) { alert(\"Suburb field is empty or invalid format input\"); }\n      else if (state === \"\" || isText(state) === false) { alert(\"State field is empty or invalid format input\"); }\n      else if (pcode === \"\" || isNumber(pcode) === false) { alert(\"Post Code is empty or invalid format input\"); }\n      else if (employtype === \"\") { alert(\"Employement Type must be select\"); }\n      else if (employdate === \"\") { alert(\"Employement Date must be select\"); }\n      else if (dept === \"\") { alert(\"Department must be select\"); }\n      else if (dob > employdate) { alert(\"Invalid date of birth and employment date\"); }\n      else if ((new Date().getFullYear() - new Date(dob).getFullYear()) <= 18) { alert(\"Employee age must be 18 or over\"); }\n      else { window.location = \"./UserList\"; }\n    }\n  }\n\n  return (\n    <div>\n      <button style={{ float: 'left' }} type='submit' className=\"update\" onClick={goBack} > Back </button> <br />\n      <form id=\"updateform\" name=\"updateform\" >\n        <h1 style={{ textAlign: 'center', fontSize: 30, }}> Edit <b>Hello World</b> details </h1>\n\n        <label> First Name: </label>\n        <small>Up to 255 Characters </small> <p> </p>\n        <input type=\"text\" defaultValue=\"Hello\" name=\"fname\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Last Name: </label> <small>Up to 255 Characters </small> <p></p>\n        <input type=\"text\" defaultValue=\"World\" name=\"lname\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Date of Birth: </label> <small> Use the calendar on the right </small>{' '}\n        <p />\n        <input type=\"date\" value=\"1992-07-02\" name=\"dob\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Username: </label>\n        <small>\n          After @ must be the system name 'EMS' followed by department initial: HR - Human\n          Resource, OP - Operation, MK - Marketing, FN - Finance{' '}\n        </small>\n        <p />\n        <input type=\"email\" defaultValue=\"helloworld@EMSHR\" name=\"username\" pattern=\"[a-z0-9._%+-]+@EMS[A-Z]{2,}$\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Password: </label>{' '}\n        <small> Maximum password length is 16 Characters </small> <p />\n        <input type=\"password\" placeholder=\"Retype Password\" maxlength=\"16\" name=\"pwd\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Contact Number: </label> <small> Up to 10 digits </small> <p />\n        <input type=\"tel\" defaultValue=\"0404990022\" name=\"phoneno\" maxlength=\"10\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Bank Account Name: </label> <small> Up to 255 Characters </small>\n        <p />\n        <input type=\"text\" placeholder=\"Full Name\" name=\"accname\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Bank Account Number: </label>\n        <small> Up to 10 Digits </small>\n        <p />\n        <input type=\"text\" placeholder=\"Account Number without space\" name=\"accnum\" minLength=\"6\" maxLength=\"10\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> BSB: </label>\n        <small> Up to 6 Digits </small>\n        <p />\n        <input type=\"text\" placeholder=\"BSB without space\" name=\"bsb\" maxLength=\"6\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Address: </label> <small>Up to 255 Characters </small> <p />\n        <input type=\"text\" defaultValue=\"15 Raleway Ave\" maxlength=\"255\" name=\"address\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Suburb: </label> <small>Up to 255 Characters </small> <p />\n        <input type=\"text\" defaultValue=\"Sydney\" maxlength=\"255\" name=\"suburb\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> State: </label> <small> State code up 3 Character </small> <p />\n        <input type=\"text\" defaultValue=\"NSW\" name=\"state\" maxlength=\"3\" className=\"formtextfield\" required />{' '}\n        <br />\n        <label> Post Code: </label> <small> Up 4 Digits </small> <p />\n        <input type=\"text\" defaultValue=\"2000\" name=\"pcode\" maxlength=\"4\" className=\"formtextfield\" required />{' '}\n        <p />\n        <label> Employment Type: </label> <p />\n        <input type=\"radio\" id=\"html\" name=\"employtype\" value=\"fulltime\" checked />\n        <label for=\"fulltime\"> Full Time </label> <p />\n        <input type=\"radio\" id=\"css\" name=\"employtype\" value=\"parttime\" />\n        <label for=\"parttime\"> Part Time </label>\n        <p />\n        <input type=\"radio\" id=\"javascript\" name=\"employtype\" value=\"casual\" />\n        <label for=\"casual\"> Casual Worker </label> <p />\n        <label> Employment Date: </label> <small> Use the calendar on the right </small>{' '}\n        <p />\n        <input type=\"date\" value=\"2019-02-02\" name=\"employdate\" className=\"formtextfield\" required />{' '}\n        <p />\n        <label> Department: </label> <br />\n        <select name=\"dept\" className=\"formtextfield\" required>\n          <option value=\"HR\"> Human Resource </option>\n          <option value=\"finance\"> Finance </option>\n          <option value=\"marketing\"> Marketing </option>\n          <option value=\"operation\"> Operation </option>\n        </select>{' '}\n        <p />\n        <div style={{ textAlign: 'center', paddingTop: 10 }}>\n          <button className=\"button\" id=\"updatesubmit\" type=\"submit\" onClick={handleSubmit}>\n            Update <b> Hello World </b> Profile\n          </button>{' '}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst UpdateEmployee = () => {\n  return <WebLayout content={Content()} />;\n}\n\nexport default UpdateEmployee;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\n\nconst content = () => {\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> All File Complaints </h1>\n        <input type=\"number\" placeholder=\"File ID\" name=\"requestedid\" class=\"textfield\" />\n        <input type=\"textfield\" placeholder=\"Name\" name=\"requestedfn\" class=\"textfield\" />\n        <input type=\"date\" name=\"requesteddate\" class=\"textfield\" />\n        <button className=\"button\" name=\"searchbtn\" type=\"submit\">\n          {' '}\n          Search{' '}\n        </button>{' '}\n        <p />\n      </div>\n\n      <div>\n        <table className=\"table\">\n          <tr>\n            <th> File ID </th>\n            <th> Category </th>\n            <th> Description </th>\n            <th> Owner </th>\n            <th> Date Submitted </th>\n            <th> Status </th>\n            <th> Option </th>\n          </tr>\n\n          <tr>\n            <td> 1 </td>\n            <td> Work </td>\n            <td> why? </td>\n            <td> Bob </td>\n            <td> dd/mm/yyyy </td>\n            <td>\n              {' '} Pending <br /> Solved {' '}\n            </td>\n            <td>\n              {' '}\n              <Link to=\"#\"> Solved </Link> <br />{' '}\n            </td>\n          </tr>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst ComplaintList = () => {\n  return <WebLayout content={content()} />;\n};\n\nexport default ComplaintList;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\n// import { Link } from 'react-router-dom';\n\nconst content = () => {\n    return (\n        <>\n            <div style={{ textAlign: 'center' }}>\n                <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Welcome, \"Name\" </h1>\n                <h2>\n                    <a href=\"#logtime\"> Logtime </a> |\n                    <a href=\"#payhistory\"> Pay History </a>\n                </h2>\n            </div>\n\n            <div id='personal'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 15, }}> Personal Information </h2>\n                <button style={{ float: 'right' }} type='submit' className=\"update\"> Update Details </button>\n                <h3> Employee ID: </h3>\n                <h3> Full Name: </h3>\n                <h3> Date of Birth: </h3>\n                <h3> Address: </h3>\n                <h3> Bank Details </h3>\n                <h3> Department: </h3>\n                <h3> Employment Date: </h3>\n                <h3> Username: </h3>\n                <h3> Password: </h3>\n                <h3> Bank Details: </h3>\n            </div>\n\n            <div id='payhistory'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, }}> Pay History </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Date </th>\n                        <th> Bank Number </th>\n                        <th> Amount $ </th>\n                        <th> Bonus $ </th>\n                        <th> Description </th>\n                    </tr>\n                    <tr>\n                        <td> dd/mm/yyyy </td>\n                        <td> 123 </td>\n                        <td> 70000 </td>\n                        <td> 5000 </td>\n                        <td> Business Claim </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id='logtime'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Logtime </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Login ID </th>\n                        <th> Login Date and Time </th>\n                        <th> Logout Date and Time </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> 10 am </td>\n                        <td> 10 pm </td>\n                    </tr>\n                </table>\n            </div>\n        </>\n    );\n};\n\nconst Personal = () => {\n    return <WebLayout content={content()} />;\n};\n\nexport default Personal;\n","import React from 'react';\nimport EmployeeWebLayout from './components/EmployeeWebLayout';\n\nconst testText = () => {\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Hello, Employee </h1>\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> Annoucement </h2>\n      <li>\n        System maintenance is due at midnight to tomorrow 7am. Ensure not to use the system during the maintenance time\n        as changed information may not be saved.\n      </li>\n      <li> Starting next year, a new payment policy is apply. Please read the new policy in the \"Payment Policy\" page. </li>\n      <li> End of year party ticket is open, date and time is to be annouce. </li>\n      <br /><p />\n\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> General Information </h2>\n      <li>\n        As an employee from departments other than Human Resource (HR), also known as the employee in the EMS system, you will not have the\n        priviledge to add, delete and modify other employees information. However, you can view and update your personal infromation\n        as well as launch application and files complaints.\n      </li>\n      <li>\n        As an employee, it is your responsibilities to ensure that all the provided information are accurate, relevant and recent.\n        Thus, all submitted applications and complaints are valid and reasonable.\n      </li>\n      <li>\n        EMS user are expected to visit and check the system regularly for new/updated information\n        such as changes in application and complaints status or simply daily annoucement\n      </li>\n      <br /><p />\n\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> Navigation in EMS </h2>\n      <p>\n        The navigations are categorised into groups including:\n        <li> Lauch Application - Complete the application form and submit </li>\n        <li> File Complaints - complete the complaint form and submit </li>\n        <li> Voice Concern - Acts as a discussion board where users can dicuss anonymously </li>\n        <li> Personal File - View information including: information, logtime, pay history, submmited application and compliants </li>\n      </p>\n\n      <p>\n        <br></br>\n        <i>Many thanks,</i>\n        <br></br>\n        Martin Lym <br></br>\n        <br></br>\n        Human Resources Manager <br></br>\n        <b>Enterprise Management Systems</b>\n      </p>\n\n    </div>\n  );\n};\n\nconst EmployeeDashboard = () => {\n  return <EmployeeWebLayout content={testText()} />;\n};\n\nexport default EmployeeDashboard;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\n\nconst content = () => {\n    return (\n        <div>\n            <div className=\"navbar\">\n                <ul>\n                    <li> <button> Bullet Point </button> </li>\n                    <li> <button> Bold </button> </li>\n                    <li> <button> Italic </button> </li>\n                    <li> <button> Underline </button> </li>\n                    <li> <button> Text Color </button> </li>\n                </ul>\n            </div>\n            <div>\n                <textarea type=\"text\" className=\"formtextfield\" cols=\"50\" rows=\"50\" >\n                    \"payment policy get from the database\"\n                </textarea>\n\n                <div style={{ textAlign: 'center', paddingTop: 10 }}>\n                    <Link to=\"./PaymentPolicy\"> <button className=\"button\"> Updated New Policy </button> </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst PaymentPolicy = () => {\n    return <WebLayout content={content()} />;\n};\n\nexport default PaymentPolicy;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\n\nconst content = () => {\n    function handleSubmit(e) {\n        function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); }\n        function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n        e.preventDefault();\n        var s = window.confirm(\"Do you want add a new user with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to reset form\");\n        if (s === true) {\n            var fname = document.forms[\"payrollform\"][\"fname\"].value;\n            var lname = document.forms[\"payrollform\"][\"lname\"].value;\n            var amount = document.forms[\"payrollform\"][\"amt\"].value;\n            var bonus = document.forms[\"payrollform\"][\"bonus\"].value;\n            var description = document.forms[\"payrollform\"][\"description\"].value;\n\n\n            if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n            else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n            else if (amount === \"\" || isNumber(amount) === false) { alert(\"Amount field is empty or invalid format input\"); }\n            else if (bonus === \"\" || isNumber(bonus) === false) { alert(\"Contact Number field is empty or invalid format input\"); }\n            else if (description === \"\") { alert(\"Provide payment reason for this payroll\"); }\n            else { window.location = \"./PayrollHistory\"; }\n        }\n        else { document.getElementById(\"payrollform\").reset(); }\n    }\n\n    return (\n        <>\n            <div>\n                <form id='payrollform' name='payrollform'>\n                    <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Create New Payroll </h1>\n                    <p style={{ textAlign: 'center' }}> {' '} Please fill out the payroll details </p>\n                    <label> Pay Date: </label>\n                    <input type=\"text\" value={new Date()} name=\"paydate\" className=\"formtextfield\" disabled />{' '}\n                    <br />\n\n                    <label> Employee First Name: </label>\n                    <input type=\"text\" placeholder=\"First Name\" name=\"fname\" className=\"formtextfield\" required />{' '}\n                    <br />\n                    <label> Employee Last Name: </label>\n                    <input type=\"text\" placeholder=\"Last Name\" name=\"lname\" className=\"formtextfield\" required />{' '}\n                    <br />\n                    <label> Amount $: </label>\n                    <p />\n                    <input type=\"number\" placeholder=\"Current Pay\" name=\"amt\" className=\"formtextfield\" required />{' '}\n                    <br />\n                    <label> Bonus $: </label>\n                    <p />\n                    <input type=\"number\" placeholder=\"Bonus\" name=\"bonus\" className=\"formtextfield\" required />{' '}\n                    <br />\n                    <label> Payment Method: </label> <br />\n                    <select name=\"paymethod\" className=\"formtextfield\" required>\n                        <option value=\"select\"> -- Select one -- </option>\n                        <option value=\"cash\"> Cash </option>\n                        <option value=\"cheque\"> Cheques </option>\n                        <option value=\"eftpos\"> EFTPOS </option>\n                        <option value=\"others\"> Others </option>\n                    </select>{' '}\n                    <p />\n                    <label> Description </label>\n                    <p />\n                    <textarea type=\"text\" placeholder=\"Payment Reason\" name=\"description\" className=\"formtextfield\" required />{' '}\n                    <br />\n                    <div style={{ textAlign: 'center', paddingTop: 10 }}>\n                        <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit}> Create New Payroll </button>{' '}\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n};\n\nconst AddUser = () => {\n    return <WebLayout content={content()} />;\n};\n\nexport default AddUser;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\n\nconst content = () => {\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> All Employee Concerns </h1>\n        <input type=\"number\" placeholder=\"Concern ID\" name=\"requestedid\" class=\"textfield\" />\n        <input type=\"textfield\" placeholder=\"Name\" name=\"requestedfn\" class=\"textfield\" />\n        <input type=\"date\" name=\"requesteddate\" class=\"textfield\" />\n        <button className=\"button\" name=\"searchbtn\" type=\"submit\">\n          {' '}\n          Search{' '}\n        </button>{' '}\n        <p />\n      </div>\n\n      <div>\n        <table className=\"table\">\n          <tr>\n            <th> Concern ID </th>\n            <th> Name </th>\n            <th> Topic </th>\n            <th> What </th>\n            <th> How/Why </th>\n            <th> Date Submitted </th>\n            <th> Status </th>\n            <th> Option </th>\n          </tr>\n\n          <tr>\n            <td> 1 </td>\n            <td> Bill </td>\n            <td> today </td>\n            <td> Not Happy </td>\n            <td> No bonus</td>\n            <td> dd/mm/yyyy </td>\n            <td> Pending <br/> Solved </td>\n            <td> <Link to=\"#\"> Solved </Link> <br /> </td>\n          </tr>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst ConcernList = () => {\n  return <WebLayout content={content()} />;\n};\n\nexport default ConcernList;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\n// import { Link } from 'react-router-dom';\n\nconst content = () => {\n    function goBack() { window.history.back(); }\n\n    return (\n        <>\n            <div style={{ textAlign: 'center' }}>\n                <button style={{ float: 'left' }} type='submit' className=\"update\" onClick={goBack} > Back </button>\n                <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> \"Name\" </h1>\n                <h2>\n                    <a href=\"#applicationsubmit\"> Application Submitted </a> |\n                    <a href=\"#complaintsubmit\"> Complaint Submitted </a> |\n                    <a href=\"#logtime\"> Logtime </a> |\n                    <a href=\"#payhistory\"> Pay History </a>\n                </h2>\n            </div>\n\n            <div id='personal'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 15, }}> Personal Information </h2>\n                <button style={{ float: 'right' }} type='submit' className=\"update\"> Update Details </button>\n                <h3> Employee ID: </h3>\n                <h3> Full Name: </h3>\n                <h3> Date of Birth: </h3>\n                <h3> Address: </h3>\n                <h3> Bank Details </h3>\n                <h3> Department: </h3>\n                <h3> Employment Date: </h3>\n                <h3> Username: </h3>\n                <h3> Password: </h3>\n                <h3> Bank Details: </h3>\n            </div>\n\n            <div id='applicationsubmit'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Application Submitted </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Application ID </th>\n                        <th> Date Submitted </th>\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Status </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> dd/mm/yyyy </td>\n                        <td> apply leave </td>\n                        <td> description </td>\n                        <td> pending <br /> approved <br /> declined <br /> </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id='complaintsubmit'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Complaints Submitted </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Complaint ID </th>\n                        <th> Date Submitted </th>\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Status </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> dd/mm/yyyy </td>\n                        <td> work issue </td>\n                        <td> description </td>\n                        <td> pending <br /> solved <br /> </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id='logtime'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Logtime </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Login ID </th>\n                        <th> Login Date and Time </th>\n                        <th> Logout Date and Time </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> 10 am </td>\n                        <td> 10 pm </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id='payhistory'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, }}> Pay History </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Date </th>\n                        <th> Bank Number </th>\n                        <th> Amount $ </th>\n                        <th> Bonus $ </th>\n                        <th> Description </th>\n                    </tr>\n                    <tr>\n                        <td> dd/mm/yyyy </td>\n                        <td> 123 </td>\n                        <td> 70000 </td>\n                        <td> 5000 </td>\n                        <td> Business Claim </td>\n                    </tr>\n                </table>\n            </div>\n        </>\n    );\n};\n\nconst Profile = () => {\n    return <WebLayout content={content()} />;\n};\n\nexport default Profile;\n","import React from 'react';\nimport EmployeeWebLayout from './components/EmployeeWebLayout';\n// import { Link } from 'react-router-dom';\n\nconst content = () => {\n    return (\n        <>\n            <div style={{ textAlign: 'center' }}>\n                <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Welcome, \"Name\" </h1>\n                <h2>\n                    <a href=\"#applicationsubmit\"> Application Submitted </a> |\n                    <a href=\"#complaintsubmit\"> Complaint Submitted </a> |\n                    <a href=\"#logtime\"> Logtime </a> |\n                    <a href=\"#payhistory\"> Pay History </a>\n                </h2>\n            </div>\n\n            <div id='personal'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 15, }}> Personal Information </h2>\n                <button style={{ float: 'right' }} type='submit' className=\"update\"> Update Details </button>\n                <h3> Employee ID: </h3>\n                <h3> Full Name: </h3>\n                <h3> Date of Birth: </h3>\n                <h3> Address: </h3>\n                <h3> Bank Details </h3>\n                <h3> Department: </h3>\n                <h3> Employment Date: </h3>\n                <h3> Username: </h3>\n                <h3> Password: </h3>\n                <h3> Bank Details: </h3>\n            </div>\n\n            <div id='applicationsubmit'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Application Submitted </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Application ID </th>\n                        <th> Date Submitted </th>\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Status </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> dd/mm/yyyy </td>\n                        <td> apply leave </td>\n                        <td> description </td>\n                        <td> pending <br /> approved <br /> declined <br /> </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id='complaintsubmit'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Complaints Submitted </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Complaint ID </th>\n                        <th> Date Submitted </th>\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Status </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> dd/mm/yyyy </td>\n                        <td> work issue </td>\n                        <td> description </td>\n                        <td> pending <br /> solved <br /> </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id='logtime'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Logtime </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Login ID </th>\n                        <th> Login Date and Time </th>\n                        <th> Logout Date and Time </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> 10 am </td>\n                        <td> 10 pm </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id='payhistory'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, }}> Pay History </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Date </th>\n                        <th> Bank Number </th>\n                        <th> Amount $ </th>\n                        <th> Bonus $ </th>\n                        <th> Description </th>\n                    </tr>\n                    <tr>\n                        <td> dd/mm/yyyy </td>\n                        <td> 123 </td>\n                        <td> 70000 </td>\n                        <td> 5000 </td>\n                        <td> Business Claim </td>\n                    </tr>\n                </table>\n            </div>\n        </>\n    );\n};\n\nconst EmployeePersonal = () => {\n    return <EmployeeWebLayout content={content()} />;\n};\n\nexport default EmployeePersonal;\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport Logout from './Logout';\nimport UserList from './UserList';\nimport AddUser from './AddUser';\nimport DiscussionBoard from './discussionBoard';\nimport PaymentPolicy from './PaymentPolicy';\nimport FileComplaint from './FileComplaint';\nimport Application from './Application';\nimport ApplicationList from './ApplicationList';\nimport PayrollHistory from './PayrollHistory';\nimport UpdateEmployee from './UpdateEmployee';\nimport ComplaintList from './ComplaintList';\nimport Personal from './Personal';\nimport EmployeeDashboard from './EmployeeDashboard';\nimport UpdatePolicy from './UpdatePolicy';\nimport AddPayroll from './AddPayroll';\nimport ConcernList from './ConcernList'\nimport Profile from './Profile'\nimport EmployeePersonal from './EmployeePersonal';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\"> <Login /> </Route>\n        <Route exact path=\"/Logout\"> <Logout /> </Route>\n\n        <Route exact path=\"/ComplaintList\"> <ComplaintList /> </Route>\n        <Route exact path=\"/FileComplaint\"> <FileComplaint /> </Route>\n\n        <Route exact path=\"/Dashboard\"> <Dashboard /> </Route>\n        <Route exact path=\"/EmployeeDashboard\"> <EmployeeDashboard /> </Route>\n\n        <Route exact path=\"/discussionBoard\"> <DiscussionBoard /> </Route>\n        <Route exact path=\"/ConcernList\"> <ConcernList /> </Route>\n\n        <Route exact path=\"/Personal\"> <Personal /> </Route>\n        <Route exact path=\"/EmployeePersonal\"> <EmployeePersonal /> </Route>\n\n        <Route exact path=\"/Profile\"> <Profile /> </Route>\n        <Route exact path=\"/AddUser\"> <AddUser /> </Route>\n        <Route exact path=\"/UserList\"> <UserList /> </Route>\n        <Route exact path=\"/UpdateEmployee\"> <UpdateEmployee /> </Route>\n\n        <Route exact path=\"/Application\"> <Application /> </Route>\n        <Route exact path=\"/ApplicationList\"> <ApplicationList /> </Route>\n\n        <Route exact path=\"/AddPayroll\"> <AddPayroll /> </Route>\n        <Route exact path=\"/PayrollHistory\"> <PayrollHistory /> </Route>\n\n        <Route exact path=\"/PaymentPolicy\"> <PaymentPolicy /> </Route>\n        <Route exact path=\"/UpdatePolicy\"> <UpdatePolicy /> </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import 'chakraprovider' component\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}