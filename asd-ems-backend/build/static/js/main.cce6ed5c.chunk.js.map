{"version":3,"sources":["services/Auth.js","components/WebLayout.js","Dashboard.js","services/Employee.js","Login.js","Logout.js","UserList.js","AddUser.js","Roster.js","components/EmployeeWebLayout.js","discussionBoard.js","PaymentPolicy.js","FileComplaint.js","Application.js","services/Application.js","ApplicationList.js","services/Payroll.js","PayrollHistory.js","UpdateEmployee.js","services/Complaint.js","ComplaintList.js","Personal.js","UpdatePayroll.js","EmployeeDashboard.js","UpdatePolicy.js","AddPayroll.js","services/Concern.js","ConcernList.js","Profile.js","EmployeePersonal.js","UpdateUser.js","App.less","App.js","reportWebVitals.js","index.js"],"names":["this","authenticated","cb","console","log","Header","Layout","Footer","Sider","Content","SubMenu","Menu","WebLayout","id","content","style","minHeight","className","theme","defaultSelectedKeys","mode","Item","icon","PieChartOutlined","to","UserOutlined","title","TeamOutlined","FileOutlined","CommentOutlined","DesktopOutlined","RobotOutlined","LoginOutlined","padding","color","textAlign","fontSize","margin","Dashboard","fontWeight","textDecorationLine","paddingBottom","baseUrl","axios","get","then","response","data","Login","useState","username","setUsername","password","setPassword","employees","setEmployees","history","useHistory","useEffect","employeeService","user","find","x","getAccount","undefined","pwd","handleSubmit","e","isAdmin","isEmployee","a","name","test","preventDefault","push","pathname","alert","height","alignItems","justifyContent","direction","mb","background","p","rounded","onSubmit","placeholder","variant","onChange","target","value","type","colorScheme","disabled","length","onClick","Logout","Column","Table","Option","Select","deptFilter","setDeptFilter","nameFilter","setNameFilter","typeFilter","setTypeFilter","handleView","currentTarget","employee","toString","handleEditRoute","handleDelete","window","confirm","delete","location","reload","Group","compact","size","width","event","allowClear","paddingTop","dataSource","filter","c","employtype","match","dept","fname","toLowerCase","lname","dataIndex","render","split","UserList","useRouteMatch","params","dob","phoneno","accname","accnum","accbsb","address","suburb","state","pcode","employdate","setEmployee","onInputChange","post","maxLength","minLength","required","isNumber","n","isText","text","document","forms","Date","getFullYear","getElementById","reset","AddUser","dateFilter","setDateFilter","_d","toJSON","substr","dateworking","Roster","EmployeeWebLayout","userid","discussdate","topic","status","achivementgoal","methodachievement","voiceconcern","setConcern","DiscussionBoard","paymentPolicyText","forEach","element","dangerouslySetInnerHTML","__html","PaymentPolicy","complaintdescription","complaintdate","complainttype","filecomplaint","setComplaint","FileComplaint","applicationtype","applicationdate","subcategory","reason","application","setApplication","Application","applicationform","setApplications","statusFilter","setStatusFilter","applicationService","handleApprove","i","concern","Object","assign","put","handleReject","ApplicationList","payrolldb","setPayroll","payMethodFilter","setPayMethodFilter","payDateFilter","setPayDateFilter","payNameFilter","payrollService","payroll","paymethod","paydate","PayrollHistory","showEmployee","float","back","defaultValue","UpdateEmployee","complaints","setComplaints","complaintService","handleSolved","ComplaintList","MaskData","require","maskCardOptions","maskWith","unmaskedStartDigits","unmaskedEndDigits","maskedPassword","maskPassword","maxMaskedCharacters","unMaskedCharacters","unMaskedEndCharacters","bankno","maskedBankNo","sbs","maskedSBS","href","Personal","amount","bonus","description","showPayroll","UpdatePayroll","EmployeeDashboard","cols","rows","UpdatePolicy","empid","AddPayroll","voiceconcernService","ConcernList","emp","Profile","EmployeePersonal","employmentType","UpdateUser","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.cce6ed5c.chunk.js","sourcesContent":["// trying to make a proper login feature with this\nclass Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  login(cb) {\n    this.authenticated = true;\n    cb();\n  }\n\n  logout(cb) {\n    this.authenticated = false;\n    cb();\n  }\n\n  isAuthenticated() {\n\t\tconsole.log(\"authentication test: \", this.authenticated)\n    return this.authenticated;\n  }\n}\n\nexport default new Auth();\n","import { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  CommentOutlined,\n  LoginOutlined,\n  RobotOutlined\n} from '@ant-design/icons';\nimport './Dashboard.css';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst WebLayout = ({ id, content }) => {\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['menu1']} mode=\"inline\">\n          <Menu.Item key=\"menu1\" icon={<PieChartOutlined />}>\n            <Link to={`/Dashboard`}>\n              <button> Home </button>{' '}\n            </Link>\n          </Menu.Item>\n\n          <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Employee Manage\">\n            <Menu.Item key=\"3\">\n              <Link to={`/AddUser`}>\n                <button> Add Employee</button>{' '}\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to={`/UserList`}>\n                <button> Employee List </button>{' '}\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Link to={`/Roster`}>\n                <button> Roster </button>{' '}\n              </Link>\n            </Menu.Item>\n          </SubMenu>\n\n          <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Payroll Manage\">\n            <Menu.Item key=\"4\">\n              <Link to={`/Payroll`}>\n                <button> New Payroll </button>\n              </Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"5\">\n              <Link to={`/PayrollHistory`}>\n                <button> Payroll History </button>{' '}\n              </Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"5\">\n              <Link to={`/PayrollLog`}>\n                <button> Payroll Log </button>\n              </Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"7\">\n              <Link to={`/PaymentPolicy`}>\n                <button> Payment Policy</button>\n              </Link>\n            </Menu.Item>\n          </SubMenu>\n\n          <Menu.Item key=\"menu2\" icon={<FileOutlined />}>\n            <Link to={`/ApplicationList`}>\n              <button> Manage Application </button>\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu3\" icon={<CommentOutlined />}>\n            <Link to={`/ComplaintList`}>\n              <button> Manage Complaints </button>\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu4\" icon={<DesktopOutlined />}>\n            <Link to={`/ConcernList`}>\n              <button> Concern Manage </button>\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu5\" icon={<RobotOutlined />}>\n            <Link to={`/Personal`}>\n              <button> Personal File </button>\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu6\" icon={<LoginOutlined />}>\n            <Link to=\"./Logout\">\n              <button> Logout </button>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          <h1 style={{ color: 'white', textAlign: 'center', fontSize: '20px' }}>\n            Employee Management System\n          </h1>\n        </Header>\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>User</Breadcrumb.Item>\n            <Breadcrumb.Item>Admin</Breadcrumb.Item>\n          </Breadcrumb>\n          {content}\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          @Copyright 2021 - ASD Group 6 <br />\n          Misty Duong, Catherine Pe Benito, George Hetrelezis, Reagan Brasch, Abdullah Slimani, Asif Bin Kabir\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default WebLayout;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\n\nconst testText = () => {\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold' }}>\n        {' '}\n        Hello, Admin{' '}\n      </h1>\n      <h2\n        style={{\n          textAlign: 'left',\n          fontSize: 20,\n          textDecorationLine: 'overline',\n          paddingBottom: 5,\n        }}>\n        {' '}\n        Announcement{' '}\n      </h2>\n      <li>\n        System maintenance is due at midnight to tomorrow 7am. Ensure not to use the\n        system during the maintenance time as changed information may not be saved.\n      </li>\n      <li>\n        {' '}\n        Starting next year, a new payment policy is apply. Please read the new policy in\n        the \"Payment Policy\" page.{' '}\n      </li>\n      <li> End of year party ticket is open, date and time is to be annouce. </li>\n      <br />\n      <p />\n\n      <h2\n        style={{\n          textAlign: 'left',\n          fontSize: 20,\n          textDecorationLine: 'overline',\n          paddingBottom: 5,\n        }}>\n        {' '}\n        General Information{' '}\n      </h2>\n      <li>\n        As an employee from the Human Resource (HR) department, also known as the admin in\n        the EMS system, you have the priviledge to view, add, delete and modify employees\n        as well as your personal information.\n      </li>\n      <li>\n        As an EMS user, it is your responsibilities to ensure that all the provided\n        information are accurate, relevant and recent. Thus, all submitted applications\n        and complaints are valid and reasonable.\n      </li>\n      <li>\n        As an admin, it is your responsibilities to assess the information where all\n        submitted applications and complaints will be required to be assessed before\n        approving/decline.\n      </li>\n      <li>\n        EMS users are expected to visit and check the system regularly for new/updated\n        information such as changes in application and complaints status or simply daily\n        annoucement.\n      </li>\n      <br />\n      <p />\n\n      <h2\n        style={{\n          textAlign: 'left',\n          fontSize: 20,\n          textDecorationLine: 'overline',\n          paddingBottom: 5,\n        }}>\n        {' '}\n        Navigation in EMS{' '}\n      </h2>\n      <p>\n        The navigations are categorised into groups including:\n        <li> Employee Manage - Employee List, Add New Employee </li>\n        <li> Payroll Manage - Payroll History, Log and Payment Policy </li>\n        <li> Application - Launch and Manage Application </li>\n        <li> Complaints - File and Manage Complaints </li>\n        <li> Concern Manage - Manage Concerns from Employee </li>\n        <li>\n          {' '}\n          Personal File - View information including: personal, logtime, pay history,\n          submmited application and compliants{' '}\n        </li>\n      </p>\n\n      <p>\n        <br></br>\n        <i>Many thanks,</i>\n        <br></br>\n        Martin Lym <br></br>\n        <br></br>\n        Human Resources Manager <br></br>\n        <b>Enterprise Management Systems</b>\n      </p>\n    </div>\n  );\n};\n\nconst Dashboard = () => {\n  return <WebLayout  content={testText()} />;\n};\n\nexport default Dashboard;\n","import axios from \"axios\";\nconst baseUrl = \"/api/employees\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst get = id => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst create = newObj => {\n  return axios.post(baseUrl, newObj);\n};\n\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { get, getAll, create, update, remove };","import { Button, Flex, Heading, Input, FormControl, Spacer } from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport employeeService from './services/Employee';\nimport PropTypes from 'prop-types';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [employees, setEmployees] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    employeeService.getAll().then(employees => {\n      setEmployees(employees);\n    });\n  }, []);\n\n  const validateForm = () => {\n    return username.length > 0 && password.length > 0;\n  };\n\n  const user = employees.find(x => x.username === username);\n\n  const getAccount = () => {\n    if (user === undefined) return false;\n    return user.pwd === password;\n  };\n\n  // TODO: HANDLING TOKEN FOR LOGIN\n  async function loginUser(cred) {\n    employeeService.get(user);\n  }\n\n\n  // ensures the login have correct values\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    function isAdmin(name) {\n      return /^-?[a-zA-Z0-9._%+-]+@EMS[HR]{2}$/.test(name);\n    }\n    function isEmployee(name) {\n      return /^-?[a-zA-Z0-9._%+-]+@EMS[OP,MK,FN]{2}$/.test(name);\n    }\n\n    // this is a login validate to redirect to 2 different dashboard\n    // before this validate will have to verify username and password with the database\n    // the username format is ...@EMSHR, ...@EMSFN, ...@EMSMK, or ...@EMSOP\n    // the last 2 initial refers to departments - HR is admin while the other 3 are employee\n\n    // if username end with HR - view admin dashboard and navbar\n    // if username end with OP, MK or FN - view employee dashboard and navbar\n    // if username end is not HR, OP, MK, or FN - user unable to login\n    // if username/password entered not match data in database - user unable to login - this is after connect the page to database\n\n    // try example@EMSHR and example@EMSOP to see the difference\n\n    if (isAdmin(username) && getAccount()) {\n      history.push(`/Dashboard`);\n    } else if (isEmployee(username) && getAccount()) {\n      history.push({\n        pathname: `./EmployeeDashboard/${user.id}`,\n      });\n    } else {\n      alert('Incorrect username and/or password');\n    }\n  };\n\n  return (\n    <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n      <Heading mb={20}> Employee Management System </Heading>\n      <Flex direction=\"column\" background=\"gray.100\" p={12} rounded={6}>\n        <Heading mb={6}>Log in</Heading>\n        <FormControl onSubmit={handleSubmit} id=\"loginform\" name=\"loginform\">\n          <Input\n            placeholder=\"Username\"\n            name=\"username\"\n            id=\"username\"\n            variant=\"filled\"\n            onChange={e => setUsername(e.target.value)}\n            mb={3}\n          />\n          <Input\n            placeholder=\"Password\"\n            variant=\"filled\"\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n            mb={6}\n          />\n        </FormControl>\n        <Flex direction=\"row\">\n          <Button colorScheme=\"teal\" disabled={!validateForm()} onClick={handleSubmit}>\n            Log in\n          </Button>\n          <Spacer />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import { Button, Flex, Heading, Spacer } from '@chakra-ui/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Logout = () => {\n  return (\n    <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n      <Heading mb={20}> Employee Management System </Heading>\n      <Flex direction=\"column\" background=\"gray.100\" p={12} rounded={6}>\n        <Heading mb={6}> You have logged out of EMS </Heading>\n\n        <Flex direction=\"row\">\n          <Link to=\"/\"> <Button colorScheme=\"teal\">\n            Log in\n          </Button> </Link>\n          <Spacer />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Logout;\n","import { Button, Divider, Space, Table, Input, Select } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport WebLayout from './components/WebLayout';\nimport employeeService from \"./services/Employee\";\nimport axios from 'axios';\nimport { useRouteMatch } from 'react-router';\n\nconst { Column } = Table;\nconst { Option } = Select;\n\nconst Content = () => {\n  const [employees, setEmployees] = useState([])\n  const [deptFilter, setDeptFilter] = useState('');\n  const [nameFilter, setNameFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    employeeService.getAll().then(employees => {\n      setEmployees(employees)\n    })\n  }, [])\n\n  // filters the values with all the inputs\n  const filteredList = () => {\n    return employees.filter(\n      c =>\n        c.employtype.match(typeFilter) &&\n        c.dept.match(deptFilter) &&\n        (c.fname.toLowerCase().match(nameFilter.toLowerCase()) ||\n          c.lname.toLowerCase().match(nameFilter.toLowerCase))\n    );\n  };\n\n  // updates each input\n  const handleChangeType = event => {\n    setTypeFilter(event);\n  };\n\n  const handleChangeDept = event => {\n    setDeptFilter(event);\n  };\n\n  //view function\n  const handleView = e => {\n    console.log(\"e.id: \", e.currentTarget.id)\n    console.log(employees)\n    const employee = employees.find(x => x.id.toString() === e.currentTarget.id)\n    console.log('test employee: ', employee)\n    history.push({\n      pathname: `/Profile/${employee.id}`,\n    })\n  }\n\n  //update function\n  const handleEditRoute = e => {\n    console.log(\"e.id: \", e.currentTarget.id)\n    console.log(employees)\n    const employee = employees.find(x => x.id.toString() === e.currentTarget.id)\n    console.log('test employee: ', employee)\n    history.push({\n      pathname: `/UpdateEmployee/${employee.id}`,\n    })\n  }\n\n  //execute delete payroll based on id after select the \"delete\" button\n  //also update the database when the function is executed\n  const handleDelete = e => {\n    var option = window.confirm(\"Do you want to delete employee with ID \" + e.currentTarget.id + \"? \\n\\n Select OK to delete or CANCEL action\");\n    if (option === true) {\n      axios.delete(`http://localhost:3001/employees/${e.currentTarget.id}`);\n      window.location.reload();\n    }\n  }\n\n  //table display a the list of all created users\n  //the update button will call the update function when selected\n  //the delete button will call the delete function when selected\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <div style={{ textAlign: 'center' }}>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Employee List </h1>\n          <br />\n          <Input.Group compact>\n            <Input\n              size=\"large\"\n              style={{ width: '20%' }}\n              placeholder=\"Name\"\n              onChange={({ target }) => {\n                setNameFilter(target.value);\n              }}\n            />\n\n            <Select\n              id=\"type\"\n              placeholder=\"Department\"\n              size=\"large\"\n              style={{ width: '20%' }}\n              onChange={handleChangeDept}\n              allowClear>\n              <Option value=\"HR\">HR</Option>\n              <Option value=\"Operation\">Operation</Option>\n              <Option value=\"Marketing\">Marketing</Option>\n              <Option value=\"Finance\">Finance</Option>\n            </Select>\n\n            <Select\n              id=\"type\"\n              placeholder=\"Employment Type\"\n              size=\"large\"\n              style={{ width: '20%' }}\n              onChange={handleChangeType}\n              allowClear>\n              <Option value=\"Full-Time\">Full-Time</Option>\n              <Option value=\"Part-Time\">Part-Time</Option>\n            </Select>\n          </Input.Group>\n          <br />\n        </div>\n        <button className=\"button\" name=\"addnew\" type=\"submit\">\n          <Link to=\"./AddUser\"> <button> Add New Employee </button></Link>\n        </button>\n      </div>\n\n      <div style={{ paddingTop: 10 }}>\n        <Table dataSource={filteredList()}>\n          <Column title=\"Employee ID\" dataIndex=\"id\" key=\"id\" />\n          <Column title=\"First Name\" dataIndex=\"fname\" key=\"firstName\" />\n          <Column title=\"Last Name\" dataIndex=\"lname\" key=\"lastName\" />\n          <Column title=\"Department\" dataIndex=\"dept\" key=\"employmentType\" />\n          <Column title=\"Employment Type\" dataIndex=\"employtype\" key=\"employmentType\" />\n          <Column title=\"Options\" key=\"id\" render={(p) => (\n            <>\n              <Space split={<Divider type=\"vertical\" />}>\n                <Button id={p.id} onClick={handleView}>view</Button>\n                <Button id={p.id} onClick={handleEditRoute}>update</Button>\n                <Button id={p.id} onClick={handleDelete}>delete</Button>\n              </Space>\n            </>\n          )} />\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst UserList = () => {\n  const match = useRouteMatch('/UserList/:id');\n  return <WebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default UserList;\n","import axios from 'axios';\nimport WebLayout from './components/WebLayout';\nimport React, { useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst Content = () => {\n  const [employees, setEmployee] = useState({\n    fname: '',\n    lname: '',\n    dob: '',\n    phoneno: '',\n    username: '',\n    pwd: '',\n    accname: '',\n    accnum: '',\n    accbsb: '',\n    address: '',\n    suburb: '',\n    state: '',\n    pcode: '',\n    employdate: '',\n    dept: '',\n    employtype: '',\n  });\n\n  const {\n    fname,\n    lname,\n    dob,\n    phoneno,\n    username,\n    pwd,\n    accname,\n    accnum,\n    accbsb,\n    address,\n    suburb,\n    state,\n    pcode,\n    employdate,\n    dept,\n    employtype,\n  } = employees;\n\n  //collect data entered into the register form\n  const onInputChange = e => {\n    setEmployee({ ...employees, [e.target.name]: e.target.value });\n  };\n\n  // execute the add function after form validation is complete\n  const onSubmit = async e => {\n    await axios.post('http://localhost:3001/employees', employees);\n    window.location = '/UserList';\n  };\n\n  //validate register form to ensure correct data in entered before submit the form or execute the add function\n  const handleSubmit = e => {\n    function isNumber(n) {\n      return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\n    }\n    function isName(name) {\n      return /^-?[a-zA-Z0-9._%+-]+@EMS[HR,OP,MK,FN]{2}$/.test(name);\n    }\n    function isText(text) {\n      return /^[A-Za-z]+$/.test(text);\n    }\n\n    e.preventDefault();\n    var s = window.confirm(\n      'Do you want add a new user with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to reset form'\n    );\n    if (s === true) {\n      var fname = document.forms['registerform']['fname'].value;\n      var lname = document.forms['registerform']['lname'].value;\n      var dob = document.forms['registerform']['dob'].value;\n      var username = document.forms['registerform']['username'].value;\n      var pwd = document.forms['registerform']['pwd'].value;\n      var phoneno = document.forms['registerform']['phoneno'].value;\n      var accname = document.forms['registerform']['accname'].value;\n      var accnum = document.forms['registerform']['accnum'].value;\n      var accbsb = document.forms['registerform']['accbsb'].value;\n      var address = document.forms['registerform']['address'].value;\n      var suburb = document.forms['registerform']['suburb'].value;\n      var state = document.forms['registerform']['state'].value;\n      var pcode = document.forms['registerform']['pcode'].value;\n      var employtype = document.forms['registerform']['employtype'].value;\n      var employdate = document.forms['registerform']['employdate'].value;\n      var dept = document.forms['registerform']['dept'].value;\n\n      if (fname === '' || isText(lname) === false) {\n        alert('First Name field is empty or invalid format input');\n      } else if (lname === '' || isText(lname) === false) {\n        alert('Last Name field is empty or invalid format input');\n      } else if (dob === '') {\n        alert('Date of Birth field must be select');\n      } else if (username === '' || isName(username) === false) {\n        alert(\n          'Username field is empty or invalid format input \\n\\n Follow the given format'\n        );\n      } else if (pwd === '') {\n        alert('Password field must be filled out');\n      } else if (phoneno === '' || isNumber(phoneno) === false) {\n        alert('Contact Number field is empty or invalid format input');\n      } else if (accname === '' || isText(accname) === false) {\n        alert('Account Name field is empty or invalid format input');\n      } else if (accnum === '' || isNumber(accnum) === false) {\n        alert('Account Number is empty or invalid format input');\n      } else if (accbsb === '' || isNumber(accbsb) === false) {\n        alert('Account BSB field is empty or invalid format input');\n      } else if (address === '') {\n        alert('Address field is empty or invalid format input');\n      } else if (suburb === '' || isText(suburb) === false) {\n        alert('Suburb field is empty or invalid format input');\n      } else if (state === '' || isText(state) === false) {\n        alert('State field is empty or invalid format input');\n      } else if (pcode === '' || isNumber(pcode) === false) {\n        alert('Post Code is empty or invalid format input');\n      } else if (employtype === '') {\n        alert('Employement Type must be select');\n      } else if (employdate === '') {\n        alert('Employement Date must be select');\n      } else if (dept === '') {\n        alert('Department must be select');\n      } else if (dob > employdate) {\n        alert('Invalid date of birth and employment date');\n      } else if (new Date().getFullYear() - new Date(dob).getFullYear() <= 18) {\n        alert('Employee age must be 18 or over');\n      } else {\n        onSubmit();\n      }\n    } else {\n      document.getElementById('registerform').reset();\n    }\n  };\n\n  //register form where admin can fill out user details to add new user to the system\n  //each element has an input validation such that correct data inputted into each field\n  //the button called the add function when selected\n  return (\n    <>\n      <div>\n        <form id=\"registerform\" name=\"registerform\" onSubmit={e => onSubmit(e)}>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold' }}>\n            {' '}\n            Add New User{' '}\n          </h1>\n          <p style={{ textAlign: 'center' }}>\n            {' '}\n            Please fill out the details below, all fields are required{' '}\n          </p>\n          <label> First Name: </label>\n          <small>Up to 255 Characters </small> <p> </p>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            name=\"fname\"\n            className=\"formtextfield\"\n            value={fname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Last Name: </label> <small>Up to 255 Characters </small> <p></p>\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            name=\"lname\"\n            className=\"formtextfield\"\n            value={lname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Date of Birth: </label> <small> Use the calendar on the right </small>{' '}\n          <p />\n          <input\n            type=\"date\"\n            placeholder=\"DD/MM/YYYY\"\n            name=\"dob\"\n            className=\"formtextfield\"\n            value={dob}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Username: </label> <br />\n          <small>\n            <i>\n              {' '}\n              After @ must be the system name 'EMS' followed by one department initial: HR\n              - Human Resource, OP - Operation, MK - Marketing, FN - Finance{' '}\n            </i>\n          </small>{' '}\n          <p />\n          <input\n            type=\"email\"\n            placeholder=\"example@EMSHR\"\n            name=\"username\"\n            className=\"formtextfield\"\n            value={username}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Password: </label>{' '}\n          <small> Maximum password length is 16 Characters </small> <p />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            maxLength=\"16\"\n            name=\"pwd\"\n            className=\"formtextfield\"\n            value={pwd}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Contact Number: </label> <small> Up to 10 digits </small> <p />\n          <input\n            type=\"text\"\n            placeholder=\"Phone Number\"\n            name=\"phoneno\"\n            maxLength=\"10\"\n            className=\"formtextfield\"\n            value={phoneno}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Bank Account Name: </label> <small> Up to 255 Characters </small>\n          <p />\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            name=\"accname\"\n            className=\"formtextfield\"\n            value={accname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Bank Account Number: </label>\n          <small> Up to 10 Digits </small>\n          <p />\n          <input\n            type=\"text\"\n            placeholder=\"Account Number without space\"\n            name=\"accnum\"\n            minLength=\"6\"\n            maxLength=\"10\"\n            className=\"formtextfield\"\n            value={accnum}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> BSB: </label>\n          <small> Up to 6 Digits </small>\n          <p />\n          <input\n            type=\"text\"\n            placeholder=\"BSB without space\"\n            name=\"accbsb\"\n            maxLength=\"6\"\n            className=\"formtextfield\"\n            value={accbsb}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Address: </label> <small> Up to 255 Characters </small> <p />\n          <input\n            type=\"text\"\n            placeholder=\"Address\"\n            maxLength=\"255\"\n            name=\"address\"\n            className=\"formtextfield\"\n            value={address}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Suburb: </label> <small>Up to 255 Characters </small> <p />\n          <input\n            type=\"text\"\n            placeholder=\"Suburb\"\n            maxLength=\"255\"\n            name=\"suburb\"\n            className=\"formtextfield\"\n            value={suburb}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> State: </label> <small> Up 3 Character </small> <p />\n          <input\n            type=\"text\"\n            placeholder=\"State\"\n            name=\"state\"\n            maxLength=\"3\"\n            className=\"formtextfield\"\n            value={state}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n          <label> Post Code: </label> <small> Up 4 Digits </small> <p />\n          <input\n            type=\"text\"\n            placeholder=\"Post Code\"\n            name=\"pcode\"\n            maxLength=\"4\"\n            className=\"formtextfield\"\n            value={pcode}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <p />\n          <label> Employment Type: </label> <p />\n          <select\n            name=\"employtype\"\n            className=\"formtextfield\"\n            value={employtype}\n            onChange={e => onInputChange(e)}>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"Full-Time\"> Full-Time </option>\n            <option value=\"Part-Time\"> Part-Time </option>\n            <option value=\"Casual\"> Casual </option>\n          </select>{' '}\n          <label> Employment Date: </label> <small> Use the calendar on the right </small>{' '}\n          <p />\n          <input\n            type=\"date\"\n            placeholder=\"DD/MM/YYYY\"\n            name=\"employdate\"\n            className=\"formtextfield\"\n            value={employdate}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <p />\n          <label> Department: </label> <br />\n          <select\n            name=\"dept\"\n            className=\"formtextfield\"\n            value={dept}\n            onChange={e => onInputChange(e)}\n            required>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"finance\"> Finance </option>\n            <option value=\"HR\"> Human Resource </option>\n            <option value=\"marketing\"> Marketing </option>\n            <option value=\"operation\"> Operation </option>\n          </select>{' '}\n          <p />\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit}>\n              {' '}\n              Create New User{' '}\n            </button>{' '}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst AddUser = () => {\n  const match = useRouteMatch('/AddUser/:id');\n  return <WebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default AddUser;\n","import { Table, Input, DatePicker } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport WebLayout from './components/WebLayout';\nimport employeeService from \"./services/Employee\";\n\n//Ensures table is able to be referenced as a Const throughout the file\nconst { Column } = Table;\n\n//Creates const for all content throughout file. Const uses state to ensure all relevant employees are shown\nconst Content = (event) => {\n  const [employees, setEmployees] = useState([]);\n  const [dateFilter, setDateFilter] = useState('');\n\n  //Gets all employees from const and ensures all getter and setter functionalities are in places\n  useEffect(() => {\n    employeeService.getAll().then(employees => {\n      setEmployees(employees)\n    })\n  }, [])\n\n  const filteredList = () => {\n    return employees.filter(\n      c =>\n        c.dateworking[0].match(dateFilter)\n    );\n  };\n\n  const handleChangeDate = event => {\n    event !== null ? setDateFilter(event._d.toJSON().substr(0, 9)) : setDateFilter('');\n    console.log('date filter: ', dateFilter);\n  };\n  \n  //Returns all content within the page, such as all relevant divs which are placed to guarantee the page's\n  //format appears as planned\n\n  return (\n    <>\n      <div style={{ textAlign: 'center', paddingBottom: '30px' }}>\n      <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Employee Roster </h1>\n      <Input.Group compact>\n        <DatePicker size=\"large\" onChange={handleChangeDate} />\n      </Input.Group>\n        {/* <input type=\"date\" placeholder=\"Filter by date\" name=\"Max Salary\" class=\"textfield \" /> */}\n        {/* <button className=\"button\" name=\"searchbtn\" type=\"submit\"> {' '} Search {' '} </button>{' '} */}\n      </div>\n      {/* Contains table with current roster information */}\n      <Table dataSource={filteredList()}>\n        <Column title=\"Employee ID\" dataIndex=\"id\" key=\"id\"/>\n        <Column title=\"First Name\" dataIndex=\"fname\" key=\"firstName\"/>\n        <Column title=\"Last Name\" dataIndex=\"lname\" key=\"lastName\"/>\n        <Column title=\"Rostered Dates (dd/mm/yyyy)\" dataIndex=\"dateworking\" key=\"dateworking\"/>\n        {/* <Column title=\"Employment Type\" dataIndex=\"employmentType\" key=\"employmentType\"/> */}\n      </Table>\n    </>\n  );\n};\n\n//Displays uniform Staff navigation bar\nconst Roster = () => {\n  return <WebLayout  content={Content()} />;\n};\n\nexport default Roster;\n","import { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  CommentOutlined,\n  LoginOutlined,\n  RobotOutlined,\n} from '@ant-design/icons';\nimport './Dashboard.css';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst EmployeeWebLayout = ({ id, content }) => {\n  return (\n    <Layout style={{ minHeight: '100vh' }} name=\"emplayout\">\n      <Sider>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['menu1']} mode=\"inline\">\n          <Menu.Item key=\"menu1\" icon={<PieChartOutlined />}>\n            <Link to={`/EmployeeDashboard/${id}`}>\n              {' '}\n              <button> Home </button>{' '}\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu2\" icon={<FileOutlined />}>\n            <Link to={`/Application/${id}`}>\n              {' '}\n              <button name=\"applaunch\"> Launch Application </button>{' '}\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu3\" icon={<CommentOutlined />}>\n            <Link to={`/FileComplaint/${id}`}>\n              {' '}\n              <button> File Complaint </button>{' '}\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu4\" icon={<DesktopOutlined />}>\n            <Link to={`/discussionBoard/${id}`}>\n              {' '}\n              <button> Voice Concern </button>{' '}\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu5\" icon={<RobotOutlined />}>\n            <Link to={`/EmployeePersonal/${id}`}>\n              {' '}\n              <button> Personal File </button>{' '}\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"menu6\" icon={<LoginOutlined />}>\n            <Link to=\"/Logout\">\n              <button> Logout </button>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          <h1 style={{ color: 'white', textAlign: 'center', fontSize: '20px' }}>\n            Employee Management System\n          </h1>\n        </Header>\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>User</Breadcrumb.Item>\n            <Breadcrumb.Item>Employee</Breadcrumb.Item>\n          </Breadcrumb>\n          {content}\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          @Copyright 2021 - ASD Group 6 <br />\n          Misty Duong, Catherine Pe Benito, George Hetrelezis, Reagan Brasch, Abdullah\n          Slimani, Asif Bin Kabir\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default EmployeeWebLayout;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport {useRouteMatch } from 'react-router-dom';\nimport EmployeeWebLayout from \"./components/EmployeeWebLayout\";\n\nconst Content = () => {\n  const match = useRouteMatch('/discussionBoard/:id');\n  const [voiceconcern, setConcern] = useState({\n    userid: match.params.id,\n    name: \"\",  discussdate: \"\", topic: \"\",\n    status: \"pending\", achivementgoal: \"\", methodachievement: \"\"\n  });\n\n  const { userid, name, discussdate, topic, status, achivementgoal, methodachievement } = voiceconcern;\n\n  const onInputChange = e => {\n    setConcern({ ...voiceconcern, [e.target.name]: e.target.value })\n  };\n\n  const onSubmit = async e => {\n    await axios.post(\"http://localhost:3001/voiceconcern\", voiceconcern);\n    alert(\"File Complaint Submitted \\n\\n The process takes up to 5 business days \\n\\n Select OK to navigate to dashboard\");\n    window.location = `/EmployeeDashboard/${match.params.id}`;\n  };\n\n  const handleSubmit = e => {\n    function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n    e.preventDefault();\n    var s = window.confirm(\"Do you want submit the application with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to reset form\");\n    if (s === true) {\n      var name = document.forms[\"dicussform\"][\"name\"].value;\n      var methodachievement = document.forms[\"dicussform\"][\"methodachievement\"].value;\n      var discussdate = document.forms[\"dicussform\"][\"discussdate\"].value;\n      var topic = document.forms[\"dicussform\"][\"topic\"].value;\n      var achivementgoal = document.forms[\"dicussform\"][\"achivementgoal\"].value;\n\n      if (name === \"\" || isText(name) === false) { alert(\"Name field is empty or invalid format input\"); }\n      else if (methodachievement === \"\") { alert(\"Last field is empty\"); }\n      else if (achivementgoal === \"\") { alert(\"'What are you trying to achieve' field is empty\"); }\n      else if (topic === \"\") { alert(\"Topic field is empty\"); }\n      else if (discussdate === \"\") { alert(\"Date  must be select\"); }\n      else { onSubmit(); }\n    }\n    else { window.location.reload(); }\n  }\n\n  return (\n    <div>\n      <form id='dicussform' className='form' name='dicussform' onSubmit={e => onSubmit(e)}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Voice Concern </h1>\n        <p style={{ textAlign: 'center' }}> We are hearing your voice !!! </p>\n        <p />\n\n        <label> Date: </label> <br />\n        <input\n          type=\"date\"\n          placeholder=\"DD/MM/YYYY\"\n          name=\"discussdate\"\n          className=\"formtextfield\"\n          value={discussdate}\n          onChange={e => onInputChange(e)}\n        />{' '}\n        <br /> <p />\n\n        <label> Name: </label> <br />\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name can be anonymous\"\n          className=\"formtextfield\"\n          value={name}\n          onChange={e => onInputChange(e)}\n        />{' '}\n        <br /> <p />\n\n        <label> Topic: </label> <br />\n        <input\n          type=\"text\"\n          placeholder=\"Topic of the concern?\"\n          name=\"topic\"\n          className=\"formtextfield\"\n          value={topic}\n          onChange={e => onInputChange(e)}\n        />{' '}\n        <br /> <p />\n\n        <label> What are you trying to achieve ? </label> <br />\n        <textarea\n          type=\"text\"\n          placeholder=\"Message\"\n          name=\"achivementgoal\"\n          className=\"formtextfield\"\n          value={achivementgoal}\n          onChange={e => onInputChange(e)}\n        />{' '}\n        <br /> <p />\n\n        <label> How differently you can do ? </label> <br />\n        <textarea\n          type=\"text\"\n          placeholder=\"Message\"\n          name=\"methodachievement\"\n          className=\"formtextfield\"\n          value={methodachievement}\n          onChange={e => onInputChange(e)}\n        />{' '}\n        <br />\n        <p />\n\n        <div style={{ textAlign: 'center', paddingTop: 10 }}>\n          <small>\n            The process may takes up to 3-5 business days <br />\n            User may check their submitted applications in the personal file\n          </small> <br />\n          <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit} > Post </button>{' '}\n        </div>\n      </form>\n\n    </div>\n  );\n};\n\nconst DiscussionBoard = () => {\n  const match = useRouteMatch('/discussionBoard/:id')\n  return <EmployeeWebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default DiscussionBoard;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router';\nimport paymentPolicyText from './paymentPolicyText.json';\n\nlet text = '';\npaymentPolicyText.data.forEach(element => {\n  text += element + '\\n';\n});\n\nconst Content = () => {\n  const match = useRouteMatch('/PaymentPolicy/:id');\n  return (\n    <div>\n      <h1 style={{ fontSize: '30px', textAlign: 'center' }}>\n        <b>Payment Policy</b>\n      </h1>\n\n      <div dangerouslySetInnerHTML={{ __html: text }}></div>\n\n      <div style={{ textAlign: 'center', paddingTop: 10 }}>\n        <Link to={`/UpdatePolicy/${match.params.id}`}> <button className=\"button\"> Update Policy </button> </Link>\n      </div>\n    </div>\n  );\n};\n\nconst PaymentPolicy = () => {\n  const match = useRouteMatch('/PaymentPolicy/:id');\n  return <WebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default PaymentPolicy;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport EmployeeWebLayout from './components/EmployeeWebLayout';\nimport {useRouteMatch} from 'react-router-dom'\n\nconst Content = () => {\n  const match = useRouteMatch('/FileComplaint/:id');\n  const [filecomplaint, setComplaint] = useState({\n    userid: match.params.id, \n    fname: \"\", lname: \"\", complaintdescription: \"\", complaintdate: \"\",\n    status: \"pending\", complainttype: \"\"\n  });\n\n  const { userid, fname, lname, complaintdescription, complainttype, complaintdate } = filecomplaint;\n\n  const onInputChange = e => {\n    setComplaint({ ...filecomplaint, [e.target.name]: e.target.value })\n  };\n\n  const onSubmit = async e => {\n    // await axios.post(\"http://localhost:3002/filecomplaint\", filecomplaint);\n    //change me back to :3002 when using Mongo. 3001 for local\n    await axios.post(\"http://localhost:3001/filecomplaint\", filecomplaint);\n    alert(\"File Complaint Submitted \\n\\n The process takes up to 5 business days \\n\\n Select OK to navigate to dashboard\");\n    window.location = `/EmployeeDashboard/${match.params.id}`;\n  };\n\n  const handleSubmit = e => {\n    function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n    e.preventDefault();\n    var s = window.confirm(\"Do you want submit the application with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to reset form\");\n    if (s === true) {\n      var fname = document.forms[\"complaintform\"][\"fname\"].value;\n      var lname = document.forms[\"complaintform\"][\"lname\"].value;\n      var complaintdescription = document.forms[\"complaintform\"][\"complaintdescription\"].value;\n      var complaintdate = document.forms[\"complaintform\"][\"complaintdate\"].value;\n\n      if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n      else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n      else if (complaintdescription === \"\") { alert(\"Description field is empty\"); }\n      else if (complaintdate === \"\") { alert(\"Complaint Date  must be select\"); }\n      else { onSubmit(); }\n    }\n    else { window.location.reload(); }\n  }\n\n  return (\n    <>\n      <div>\n        <form id='complaintform' className='form' name='complaintform' onSubmit={e => onSubmit(e)}>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> File Complaints </h1>\n          <p />\n          <label> Date: </label> <br />\n          <input\n            type=\"date\"\n            placeholder=\"DD/MM/YYYY\"\n            name=\"complaintdate\"\n            className=\"formtextfield\"\n            value={complaintdate}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n\n          <label> First Name: </label> <br />\n          <input\n            type=\"text\"\n            name=\"fname\"\n            className=\"formtextfield\"\n            value={fname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n\n          <label> Last Name: </label> <br />\n          <input\n            type=\"text\"\n            name=\"lname\"\n            className=\"formtextfield\"\n            value={lname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n\n          <label> Type of Complaint: </label> <br />\n          <select name=\"complainttype\" className=\"formtextfield\" value={complainttype} onChange={e => onInputChange(e)}>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"personal\"> Personal </option>\n            <option value=\"work\"> Work </option>\n            <option value=\"general\"> General </option>\n            <option value=\"suggestion\"> Suggestion </option>\n          </select>{' '}\n          <br /> <p />\n\n          <label> Description </label> <br />\n          <textarea\n            type=\"text\"\n            placeholder=\"Message\"\n            name=\"complaintdescription\"\n            className=\"formtextfield\"\n            value={complaintdescription}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <small>\n              The application process may takes up to 3-5 business days <br />\n              User may check their submitted applications in the personal file\n            </small> <br />\n            <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit} > Submit </button>{' '}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst FileComplaint = () => {\n  const match = useRouteMatch('/FileComplaint/:id')\n  return <EmployeeWebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default FileComplaint;\n","import EmployeeWebLayout from './components/EmployeeWebLayout';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst Content = () => {\n  const match = useRouteMatch('/Application/:id');\n  const [application, setApplication] = useState({\n    userid: match.params.id,\n    fname: '',\n    lname: '',\n    applicationtype: '',\n    applicationdate: '',\n    status: 'pending',\n    subcategory: '',\n    reason: '',\n  });\n\n  const {\n    userid,\n    fname,\n    lname,\n    applicationtype,\n    applicationdate,\n    status,\n    subcategory,\n    reason,\n  } = application;\n\n  const onInputChange = e => {\n    setApplication({ ...application, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async e => {\n    // await axios.post(\"http://localhost:3002/applicationform\", application);\n    //change me back to :3002 when using Mongo. 3001 for local\n    await axios.post('http://localhost:3001/applicationform', application);\n    alert(\n      'Application Submitted \\n\\n process takes up to 5 business days \\n\\n Select OK to navigate to dashboard'\n    );\n    window.location = `/EmployeeDashboard/${match.params.id}`;\n  };\n\n  const handleSubmit = e => {\n    function isText(text) {\n      return /^[A-Za-z]+$/.test(text);\n    }\n\n    e.preventDefault();\n    var s = window.confirm(\n      'Do you want submit the application with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to reset form'\n    );\n    if (s === true) {\n      var fname = document.forms['applicationform']['fname'].value;\n      var lname = document.forms['applicationform']['lname'].value;\n      var subcategory = document.forms['applicationform']['subcategory'].value;\n      var reason = document.forms['applicationform']['reason'].value;\n      var applicationdate = document.forms['applicationform']['applicationdate'].value;\n\n      if (fname === '' || isText(fname) === false) {\n        alert('First Name field is empty or invalid format input');\n      } else if (lname === '' || isText(lname) === false) {\n        alert('Last Name field is empty or invalid format input');\n      } else if (subcategory === '') {\n        alert('Subcategory field is empty');\n      } else if (reason === '') {\n        alert('Reason field is empty');\n      } else if (applicationdate === '') {\n        alert('Application Date  must be select');\n      } else {\n        onSubmit();\n      }\n    } else {\n      window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <form\n          id=\"applicationform\"\n          className=\"form\"\n          name=\"applicationform\"\n          onSubmit={e => onSubmit(e)}>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold' }}>\n            {' '}\n            Launch Application{' '}\n          </h1>\n          <p />\n          <label> Date: </label> <br />\n          <input\n            type=\"date\"\n            placeholder=\"DD/MM/YYYY\"\n            name=\"applicationdate\"\n            className=\"formtextfield\"\n            value={applicationdate}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n          <label> First Name: </label> <br />\n          <input\n            type=\"text\"\n            name=\"fname\"\n            className=\"formtextfield\"\n            value={fname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n          <label> Last Name: </label> <br />\n          <input\n            type=\"text\"\n            name=\"lname\"\n            className=\"formtextfield\"\n            value={lname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n          <label> Type of Application: </label> <br />\n          <select\n            name=\"applicationtype\"\n            className=\"formtextfield\"\n            value={applicationtype}\n            onChange={e => onInputChange(e)}>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"transfer between department\"> Transfer between Departments </option>\n            <option value=\"business claim\"> Business Claims </option>\n            <option value=\"appply leave\"> Apply Leave </option>\n            <option value=\"resignation\"> Resignation </option>\n            <option value=\"others\"> Others </option>\n          </select>{' '}\n          <br /> <p />\n          <label> Sub-Category: </label> <br />\n          <textarea\n            type=\"text\"\n            placeholder=\"Provide detailed description of the application\"\n            name=\"subcategory\"\n            className=\"formtextfield\"\n            value={subcategory}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n          <label> Reason </label> <br />\n          <textarea\n            type=\"text\"\n            placeholder=\"Provide detailed and valid reason\"\n            name=\"reason\"\n            className=\"formtextfield\"\n            value={reason}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br /> <p />\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <small>\n              The application process may takes up to 3-5 business days <br />\n              User may check their submitted applications in the personal file\n            </small>{' '}\n            <br />\n            <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit}>\n              {' '}\n              Submit{' '}\n            </button>{' '}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst Application = () => {\n  const match = useRouteMatch('/Application/:id');\n  return <EmployeeWebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default Application;\n","import axios from \"axios\";\nconst baseUrl = \"/applicationform\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObj => {\n  return axios.post(baseUrl, newObj);\n};\n\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };","import { Button, Divider, Space, Table, Input, Select, DatePicker } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport WebLayout from './components/WebLayout';\nimport applicationService from \"./services/Application\";\nimport axios from 'axios';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst { Column } = Table;\nconst { Option } = Select;\n\nconst Content = () => {\n  const [applicationform, setApplications] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n\n  useEffect(() => {\n    applicationService.getAll().then(applicationform => {\n      setApplications(applicationform)\n    })\n  }, [])\n\n  // filters the values with all the inputs\n  const filteredList = () => {\n    return applicationform.filter(\n      c =>\n        c.applicationtype.match(typeFilter) &&\n        c.status.match(statusFilter) &&\n        c.applicationdate.match(dateFilter) &&\n        (c.fname.toLowerCase().match(nameFilter.toLowerCase()) ||\n          c.lname.toLowerCase().match(nameFilter.toLowerCase))\n    );\n  };\n\n  // updates each input\n  const handleChangeType = event => {\n    setTypeFilter(event);\n  };\n\n  const handleChangeStatus = event => {\n    setStatusFilter(event);\n  };\n\n  const handleChangeDate = event => {\n    console.log(event);\n    event !== null ? setDateFilter(event._d.toJSON().substr(0, 9)) : setDateFilter('');\n    console.log('date filter: ', dateFilter);\n  };\n\n  const handleApprove = async e => {\n    var option = window.confirm(\"Do you want to approve application with ID \" + e.currentTarget.id + \"? \\n\\n Select OK to delete or CANCEL action\");\n\n    if (option === true) {\n      for (let i of applicationform) {\n        if (e.currentTarget.id === i.id) {\n          var concern = Object.assign({}, i);\n          concern.status = \"approved\";\n          await axios.put(`http://localhost:3001/applicationform/${e.currentTarget.id}`, concern);\n          break;\n        }\n      }\n      window.location.reload();\n    }\n  }\n\n  const handleReject = async e => {\n    var option = window.confirm(\"Do you want to reject application with ID \" + e.currentTarget.id + \"? \\n\\n Select OK to delete or CANCEL action\");\n\n    if (option === true) {\n      for (let i of applicationform) {\n        if (e.currentTarget.id == i.id) {\n          var concern = Object.assign({}, i);\n          concern.status = \"rejected\";\n          await axios.put(`http://localhost:3001/applicationform/${e.currentTarget.id}`, concern);\n          break;\n        }\n      }\n      window.location.reload();\n    }\n  }\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> All Applications </h1>\n        <br />\n        <Input.Group compact>\n          <Input\n            size=\"large\"\n            style={{ width: '20%' }}\n            placeholder=\"Name\"\n            onChange={({ target }) => {\n              setNameFilter(target.value);\n            }}\n          />\n          <Select\n            id=\"type\"\n            placeholder=\"type\"\n            size=\"large\"\n            style={{ width: '20%' }}\n            onChange={handleChangeType}\n            allowClear>\n            <Option value=\"transfer between department\">Transfer between Department</Option>\n            <Option value=\"business claim\">Business Claim</Option>\n            <Option value=\"apply leave\">Apply Leave</Option>\n            <Option value=\"resignation\">Resignation</Option>\n            <Option value=\"others\">Others</Option>\n          </Select>\n\n          <DatePicker size=\"large\" onChange={handleChangeDate} />\n\n          <Select\n            id=\"type\"\n            placeholder=\"status\"\n            size=\"large\"\n            style={{ width: '20%' }}\n            onChange={handleChangeStatus}\n            allowClear>\n            <Option value=\"pending\">Pending</Option>\n            <Option value=\"approved\">Approved</Option>\n            <Option value=\"rejected\">Rejected</Option>\n          </Select>\n        </Input.Group>\n        <br />\n        <p />\n      </div>\n\n      <div style={{ paddingTop: 10 }}>\n        <Table dataSource={filteredList()}>\n          <Column title=\"Application ID\" dataIndex=\"id\" key=\"id\" />\n          <Column title=\"First Name\" dataIndex=\"fname\" key=\"firstName\" />\n          <Column title=\"Last Name\" dataIndex=\"lname\" key=\"lastName\" />\n          <Column title=\"Application Type\" dataIndex=\"applicationtype\" key=\"applicationtype\" />\n          <Column title=\"Sub-Category\" dataIndex=\"subcategory\" key=\"subcategory\" />\n          <Column title=\"Reason\" dataIndex=\"reason\" key=\"reason\" />\n          <Column title=\"Date Submitted\" dataIndex=\"applicationdate\" key=\"applicationdate\" />\n          <Column title=\"Status\" dataIndex=\"status\" key=\"status\" />\n          <Column title=\"Options\" key=\"id\" render={(p) => (\n            <>\n              <Space split={<Divider type=\"vertical\" />}>\n                <Button id={p.id} onClick={handleApprove}> Approve </Button>\n                <Button id={p.id} onClick={handleReject}> Reject </Button>\n              </Space>\n            </>\n          )} />\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst ApplicationList = () => {\n  return <WebLayout content={Content()} />;\n};\n\nexport default ApplicationList;\n","import axios from \"axios\";\nconst baseUrl = \"/api/payrolldb\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst get = id => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst create = newObj => {\n  return axios.post(baseUrl, newObj);\n};\n\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { get, getAll, create, update, remove };\n","import { Button, Divider, Space, Table, Input, Select, DatePicker } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link, useHistory } from 'react-router-dom';\nimport payrollService from \"./services/Payroll\";\nimport { useRouteMatch } from 'react-router';\nimport axios from 'axios';\n\nconst { Column } = Table;\nconst { Option } = Select;\n\nconst Content = () => {\n  const [payrolldb, setPayroll] = useState([]);\n\n  const [payMethodFilter, setPayMethodFilter] = useState('');\n  const [payDateFilter, setPayDateFilter] = useState('');\n  const [payNameFilter, setNameFilter] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    payrollService.getAll().then(payrolldb => {\n      setPayroll(payrolldb)\n    })\n  }, [])\n\n  // filters the values with all the inputs\n  const filteredList = () => {\n    return payrolldb.filter(\n      c =>\n        c.paymethod.match(payMethodFilter) &&\n        c.paydate.match(payDateFilter) &&\n        (c.fname.toLowerCase().match(payNameFilter.toLowerCase()) ||\n          c.lname.toLowerCase().match(payNameFilter.toLowerCase))\n    );\n  };\n\n  // updates each input\n  const handleChangeType = event => {\n    setNameFilter(event);\n  };\n\n  const handleChangeMethod = event => {\n    setPayMethodFilter(event);\n  };\n\n  const handleChangeDate = event => {\n    console.log(event);\n    event !== null ? setPayDateFilter(event._d.toJSON().substr(0, 9)) : setPayDateFilter('');\n    console.log('date filter: ', payDateFilter);\n  };\n\n  // const filterByPayMethod = payMethodFilter === '' ? payrolldb : payrolldb.filter(c => c.paymethod.toLowerCase().match(payMethodFilter.toLowerCase()));\n\n  //execute delete payroll based on id after select the \"delete\" button\n  //also update the database when the function is executed\n  const handleDelete = e => {\n    var option = window.confirm(\"Do you want to delete payroll with ID \" + e.currentTarget.id + \"? \\n\\n Select OK to delete or CANCEL action\");\n    if (option === true) {\n      axios.delete(`http://localhost:3001/payrolldb/${e.currentTarget.id}`);\n      window.location = \"./PayrollHistory\"\n    }\n  }\n\n  const handleEditRoute = e => {\n    console.log(\"e.id: \", e.currentTarget.id)\n    console.log(payrolldb)\n\n    const payroll = payrolldb.find(x => x.id.toString() === e.currentTarget.id)\n\n    console.log('test payroll: ', payroll)\n    history.push({\n      pathname: `./UpdatePayroll/${payroll.id}`,\n    })\n  }\n\n  //table display a the list of all created payrols\n  //the update button will call the update function when selected\n  //the delete button will call the delete function when selected\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Payroll History </h1>\n        <p />\n        <div style={{ textAlign: 'center' }}>\n          <Input.Group compact>\n            <Input\n              size=\"large\"\n              style={{ width: '20%' }}\n              placeholder=\"Name\"\n              onChange={({ target }) => {\n                setNameFilter(target.value);\n              }}\n            />\n\n            <Select\n              id=\"type\"\n              placeholder=\"Payment Method\"\n              size=\"large\"\n              style={{ width: '20%' }}\n              onChange={handleChangeMethod}\n              allowClear>\n              <Option value=\"cheque\">Cheque</Option>\n              <Option value=\"cash\">Cash</Option>\n              <Option value=\"eftpos\">EFTPOS</Option>\n            </Select>\n\n            <DatePicker size=\"large\" onChange={handleChangeDate} />\n\n          </Input.Group>\n          <br />\n          <p />\n        </div>\n\n        <button className=\"button\" name=\"addnew\" type=\"submit\">\n          <Link to=\"./AddPayroll\"> <button> Add New Payroll</button></Link>\n        </button>\n      </div>\n\n      <div style={{ paddingTop: 10 }}>\n        <Table dataSource={filteredList()}>\n          <Column title=\"Payroll ID\" dataIndex=\"id\" key=\"id\" value=\"id\" />\n          <Column title=\"First Name\" dataIndex=\"fname\" key=\"firstName\" />\n          <Column title=\"Last Name\" dataIndex=\"lname\" key=\"lastName\" />\n          <Column title=\"Amount\" dataIndex=\"amount\" key=\"amount\" />\n          <Column title=\"Bonus\" dataIndex=\"bonus\" key=\"bonus\" />\n          <Column title=\"Payment Method\" dataIndex=\"paymethod\" key=\"paymethod\" />\n          <Column title=\"Pay Date\" dataIndex=\"paydate\" key=\"paydate\" />\n          <Column title=\"Description\" dataIndex=\"description\" key=\"Description\" />\n          <Column title=\"Options\" key=\"id\" render={(p) => (\n            <>\n              <Space split={<Divider type=\"vertical\" />}>\n                <Button id={p.id} onClick={handleDelete}> delete</Button>\n                <Button id={p.id} onClick={handleEditRoute}>update</Button>\n              </Space>\n            </>\n          )} />\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst PayrollHistory = () => {\n  const match = useRouteMatch('/PayrollHistory/:id');\n  return <WebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default PayrollHistory;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { useRouteMatch } from 'react-router-dom';\nimport WebLayout from './components/WebLayout';\nimport employeeService from './services/Employee';\nimport './style.css';\n\nconst Content = () => {\n  const match = useRouteMatch('/UpdateEmployee/:id');\n  function goBack() { window.history.back(); }\n  console.log('match: ', match)\n  const [employee, setEmployee] = useState({\n    fname: '',\n    lname: '',\n    dob: '',\n    phoneno: '',\n    username: '',\n    pwd: '',\n    accname: '',\n    accnum: '',\n    accbsb: '',\n    address: '',\n    suburb: '',\n    state: '',\n    pcode: '',\n    employdate: '',\n    dept: '',\n    employtype: '',\n  });\n\n  // fixes\n  const showEmployee = () => {\n    return employee !== undefined ? employee : \"\";\n  }\n\n const {\n    fname, lname, dob, phoneno,\n    username, pwd,\n    accname, accnum, accbsb,\n    address, suburb, state, pcode,\n    employdate, dept, employtype\n  } = employee;\n\n  useEffect(() => {\n    employeeService.get(match.params.id).then(e => setEmployee(e))\n  }, [])\n\n  console.log(\"employee test: \", employee)\n  console.log(\"match params id type\", typeof match.params.id)\n\n  const onInputChange = e => {\n    setEmployee({...employee, [e.target.name]: e.target.value})\n  }\n\n  const onSubmit = async e => {\n    await axios.put(`http://localhost:3001/employees/${match.params.id}`, employee)\n    window.location = \"/userList\"\n  }\n\n  function goBack(e) {\n    e.preventDefault();\n    var option = window.confirm(\"Do you want leave the page?\\n\\nSelect OK to go back and data will not be saved\\n\\nSelect CANCEL to remain on the page\")\n    if (option === true) { window.history.back(); }\n  }\n\n  function handleSubmit(e) {\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); }\n    function isName(name) { return /^-?[a-zA-Z0-9._%+-]+@EMS[HR,OP,MK,FN]{2}$/.test(name) }\n    function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n    e.preventDefault();\n    var s = window.confirm(\"Do you update the information with entered data?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to remain on the page\");\n    if (s === true) {\n      console.log(document.forms)\n      var fname = document.forms[\"updateform\"][\"fname\"].value;\n      var lname = document.forms[\"updateform\"][\"lname\"].value;\n      var dob = document.forms[\"updateform\"][\"dob\"].value;\n      var username = document.forms[\"updateform\"][\"username\"].value;\n      var pwd = document.forms[\"updateform\"][\"pwd\"].value;\n      var phoneno = document.forms[\"updateform\"][\"phoneno\"].value;\n      var accname = document.forms[\"updateform\"][\"accname\"].value;\n      var accnum = document.forms[\"updateform\"][\"accnum\"].value;\n      var accbsb = document.forms[\"updateform\"][\"accbsb\"].value;\n      var address = document.forms[\"updateform\"][\"address\"].value;\n      var suburb = document.forms[\"updateform\"][\"suburb\"].value;\n      var state = document.forms[\"updateform\"][\"state\"].value;\n      var pcode = document.forms[\"updateform\"][\"pcode\"].value;\n      var employtype = document.forms[\"updateform\"][\"employtype\"].value;\n      var employdate = document.forms[\"updateform\"][\"employdate\"].value;\n      var dept = document.forms[\"updateform\"][\"dept\"].value;\n\n      if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n      else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n      else if (dob === \"\") { alert(\"Date of Birth field must be select\"); }\n      else if (username === \"\" || isName(username) === false) { alert(\"Username field is empty or invalid format input \\n\\n Follow the given format\"); }\n      else if (pwd === \"\") { alert(\"Password field must be filled out\"); }\n      else if (phoneno === \"\" || isNumber(phoneno) === false) { alert(\"Contact Number field is empty or invalid format input\"); }\n      else if (accname === \"\" || isText(accname) === false) { alert(\"Account Name field is empty or invalid format input\"); }\n      else if (accnum === \"\" || isNumber(accnum) === false) { alert(\"Account Number is empty or invalid format input\"); }\n      else if (accbsb === \"\" || isNumber(accbsb) === false) { alert(\"Account BSB field is empty or invalid format input\"); }\n      else if (address === \"\") { alert(\"Address field is empty or invalid format input\"); }\n      else if (suburb === \"\" || isText(suburb) === false) { alert(\"Suburb field is empty or invalid format input\"); }\n      else if (state === \"\" || isText(state) === false) { alert(\"State field is empty or invalid format input\"); }\n      else if (pcode === \"\" || isNumber(pcode) === false) { alert(\"Post Code is empty or invalid format input\"); }\n      else if (employtype === \"\") { alert(\"Employement Type must be select\"); }\n      else if (employdate === \"\") { alert(\"Employement Date must be select\"); }\n      else if (dept === \"\") { alert(\"Department must be select\"); }\n      else if (dob > employdate) { alert(\"Invalid date of birth and employment date\"); }\n      else if ((new Date().getFullYear() - new Date(dob).getFullYear()) <= 18) { alert(\"Employee age must be 18 or over\"); }\n      else { onSubmit() }\n    }\n    else {document.getElementById(\"updateform\").reset()}\n  }\n\n  return (\n  <>\n      <div>\n        <form id='updateform' name='updateform' onSubmit={e => onSubmit(e)}>\n        <button style={{ float: 'left' }} type='submit' className=\"update\" onClick={goBack} > Back </button>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Update {showEmployee().fname + \" \" + showEmployee().lname}</h1>\n          <p style={{ textAlign: 'center' }}> {' '} Please fill out the details below, all fields are required{' '} </p>\n\n          <label> First Name: </label>\n          <small>Up to 255 Characters </small> <p> </p>\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().fname}\n            name=\"fname\"\n            className=\"formtextfield\"\n            value={fname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Last Name: </label> <small>Up to 255 Characters </small> <p></p>\n          <input\n            type=\"text\"\n            name=\"lname\"\n            defaultValue={showEmployee().lname}\n            className=\"formtextfield\"\n            value={lname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Date of Birth: </label>{' '}\n          <small> Use the calendar on the right </small> <p />\n          <input\n            type=\"date\"\n            defaultValue={showEmployee().dob}\n            name=\"dob\"\n            className=\"formtextfield\"\n            value={dob}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Username: </label> <br />\n          <small>\n            <i> After @ must be the system name 'EMS' followed by one department  initial:\n              HR - Human Resource, OP - Operation, MK - Marketing, FN - Finance </i>\n          </small>{' '}\n          <p />\n          <input\n            type=\"email\"\n            defaultValue={showEmployee().username}\n            name=\"username\"\n            className=\"formtextfield\"\n            value={username}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Password: </label>{' '}\n          <small> Maximum password length is 16 Characters </small> <p />\n          <input\n            type=\"password\"\n            defaultValue={showEmployee().pwd}\n            maxLength=\"16\" name=\"pwd\"\n            value={pwd}\n            className=\"formtextfield\"\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Contact Number: </label> <small> Up to 10 digits </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().phoneno}\n            name=\"phoneno\"\n            maxLength=\"10\"\n            className=\"formtextfield\"\n            value={phoneno}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Bank Account Name: </label> <small> Up to 255 Characters </small>\n          <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().accname}\n            name=\"accname\"\n            className=\"formtextfield\"\n            value={accname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Bank Account Number: </label>\n          <small> Up to 10 Digits </small>\n          <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().accnum}\n            name=\"accnum\"\n            minLength=\"6\" maxLength=\"10\"\n            className=\"formtextfield\"\n            value={accnum}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> BSB: </label>\n          <small> Up to 6 Digits </small>\n          <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().accbsb}\n            name=\"accbsb\" maxLength=\"6\"\n            className=\"formtextfield\"\n            value={accbsb}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Address: </label> <small> Up to 255 Characters </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().address}\n            maxLength=\"255\"\n            name=\"address\"\n            className=\"formtextfield\"\n            value={address}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Suburb: </label> <small>Up to 255 Characters </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().suburb}\n            maxLength=\"255\"\n            name=\"suburb\"\n            className=\"formtextfield\"\n            value={suburb}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> State: </label> <small> Up 3 Character </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().state}\n            name=\"state\" maxLength=\"3\"\n            className=\"formtextfield\"\n            value={state}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Post Code: </label> <small> Up 4 Digits </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().pcode}\n            name=\"pcode\" maxLength=\"4\"\n            className=\"formtextfield\"\n            value={pcode}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <p />\n\n          <label> Employment Type: </label> <p />\n          <select name=\"employtype\" className=\"formtextfield\" value={employtype} defaultValue={showEmployee().employtype}  onChange={e => onInputChange(e)} >\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"Full-Time\"> Full-Time </option>\n            <option value=\"Part-Time\"> Part-Time </option>\n            <option value=\"Casual\"> Casual </option>\n          </select>{' '}\n\n          <label> Employment Date: </label>{' '}\n          <small> Use the calendar on the right </small> <p />\n          <input\n            type=\"date\"\n            defaultValue={showEmployee().employdate}\n            name=\"employdate\"\n            value={employdate}\n            className=\"formtextfield\"\n            onChange={e => onInputChange(e)} />{' '}\n          <p />\n\n          <label> Department: </label> <br />\n          <select name=\"dept\" className=\"formtextfield\" value={dept} defaultValue={showEmployee().dept} onChange={e => onInputChange(e)} required>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"Finance\"> Finance </option>\n            <option value=\"HR\"> Human Resource </option>\n            <option value=\"Marketing\"> Marketing </option>\n            <option value=\"Operation\"> Operation </option>\n          </select>{' '}\n          <p />\n\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit} > Update <b>{showEmployee().username}</b> </button>{' '}\n          </div>\n        </form>\n      </div>\n    </> \n  );\n};\n\nconst UpdateEmployee = () => {\n  return <WebLayout content={Content()} />;\n}\n\nexport default UpdateEmployee;\n","import axios from \"axios\";\nconst baseUrl = \"/api/filecomplaint\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObj => {\n  return axios.post(baseUrl, newObj);\n};\n\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };","import { Button, Divider, Space, Table, Input, Select, DatePicker } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WebLayout from './components/WebLayout';\nimport complaintService from './services/Complaint';\n\nconst { Column } = Table;\nconst { Option } = Select;\n\nconst Content = () => {\n  const [complaints, setComplaints] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n\n  useEffect(() => {\n    complaintService.getAll().then(filecomplaint => {\n      setComplaints(filecomplaint);\n    });\n  }, []);\n\n  // filters the values with all the inputs\n  const filteredList = () => {\n    return complaints.filter(\n      c =>\n        c.complainttype.match(typeFilter) &&\n        c.status.match(statusFilter) &&\n        c.complaintdate.match(dateFilter) &&\n        (c.fname.toLowerCase().match(nameFilter.toLowerCase()) ||\n          c.lname.toLowerCase().match(nameFilter.toLowerCase))\n    );\n  };\n\n  // updates each input\n  const handleChangeType = event => {\n    setTypeFilter(event);\n  };\n\n  const handleChangeStatus = event => {\n    setStatusFilter(event);\n  };\n\n  const handleChangeDate = event => {\n    console.log(event);\n    event !== null ? setDateFilter(event._d.toJSON().substr(0, 9)) : setDateFilter('');\n    console.log('date filter: ', dateFilter);\n  };\n\n  // Handled solved / pending complaints\n  const handleSolved = async e => {\n    var option = window.confirm(\n      'Do you want to solve complaint with ID ' +\n        e.currentTarget.id +\n        '? \\n\\n Select OK to delete or CANCEL action'\n    );\n\n    if (option === true) {\n      for (let i of complaints) {\n        if (e.currentTarget.id === i.id) {\n          var concern = Object.assign({}, i);\n          concern.status = 'solved';\n          await axios.put(\n            `http://localhost:3001/filecomplaint/${e.currentTarget.id}`,\n            concern\n          );\n          break;\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold' }}>\n          {' '}\n          All File Complaints{' '}\n        </h1>\n        <br />\n        <Input.Group compact>\n          <Input\n            size=\"large\"\n            style={{ width: '20%' }}\n            placeholder=\"Name\"\n            onChange={({ target }) => {\n              setNameFilter(target.value);\n            }}\n          />\n          <Select\n            id=\"type\"\n            placeholder=\"type\"\n            size=\"large\"\n            style={{ width: '20%' }}\n            onChange={handleChangeType}\n            allowClear>\n            <Option value=\"general\">general</Option>\n            <Option value=\"work\">work</Option>\n            <Option value=\"personal\">personal</Option>\n            <Option value=\"suggestion\">suggestion</Option>\n          </Select>\n          <DatePicker size=\"large\" onChange={handleChangeDate} />\n          <Select\n            id=\"type\"\n            placeholder=\"status\"\n            size=\"large\"\n            style={{ width: '20%' }}\n            onChange={handleChangeStatus}\n            allowClear>\n            <Option value=\"pending\">pending</Option>\n            <Option value=\"solved\">solved</Option>\n          </Select>\n        </Input.Group>\n        <br />\n        <p />\n      </div>\n\n      <div style={{ paddingTop: 10 }}>\n        <Table dataSource={filteredList()}>\n          <Column title=\"Complaint ID\" dataIndex=\"id\" key=\"id\" />\n          <Column title=\"First Name\" dataIndex=\"fname\" key=\"firstName\" />\n          <Column title=\"Last Name\" dataIndex=\"lname\" key=\"lastName\" />\n          <Column title=\"Type\" dataIndex=\"complainttype\" key=\"complainttype\" />\n          <Column\n            title=\"Description\"\n            dataIndex=\"complaintdescription\"\n            key=\"complaintdescription\"\n          />\n          <Column title=\"Date Submitted\" dataIndex=\"complaintdate\" key=\"complaintdate\" />\n          <Column title=\"Status\" dataIndex=\"status\" key=\"status\" />\n          <Column\n            title=\"Options\"\n            key=\"id\"\n            render={p => (\n              <>\n                <Space split={<Divider type=\"vertical\" />}>\n                  <Button id={p.id} onClick={handleSolved}>\n                    {' '}\n                    Solved{' '}\n                  </Button>\n                </Space>\n              </>\n            )}\n          />\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst ComplaintList = () => {\n  return <WebLayout  content={Content()} />;\n};\n\nexport default ComplaintList;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Divider, Space, Table } from 'antd';\nimport WebLayout from './components/WebLayout';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport employeeService from './services/Employee';\n\nconst Content = () => {\n    const match = useRouteMatch('/Personal/:id');\n    const history = useHistory();\n    const [employee, setEmployee] = useState({});\n    \n    const [logtime, setLogTime] = useState([]);\n    const [payroll, setPayroll] = useState([]);\n\n    const MaskData = require('maskdata');\n\n    const maskPasswordOptions = {\n        maskWith: \"*\", //default masking value \n        maxMaskedCharacters: 20, //number of masking value is limited to 20\n        unMaskedCharacters: 0, //to show unmasked value - first\n        unMaskedEndCharacters: 0 //to show unmasked value - last\n    };\n\n    const maskCardOptions = {\n        maskWith: \"X\", //default masking value\n        unmaskedStartDigits: 10, // max value is 10\n        unmaskedEndDigits: 1\n    };\n\n    const password = employee[\"pwd\"];\n    const maskedPassword = MaskData.maskPassword(password, maskPasswordOptions); //mask password\n\n    const bankno = employee[\"accnum\"];\n    const maskedBankNo = MaskData.maskPassword(bankno, maskCardOptions); //mask bank number details\n    \n    const sbs = employee[\"accbsb\"];\n    const maskedSBS = MaskData.maskPassword(sbs, maskCardOptions); //mask sbs number details\n\n    const handleEditRoute = e => {\n        history.push({\n            pathname: `/UpdateUser/${employee.id}`\n        })\n    }\n\n    // const id = window.localStorage.getItem(\"current-admin\");\n    // useEffect(() => {\n    //     employeeService.get(id).then(employee => {\n    //         setEmployee(employee);\n    //     })\n    //     axios.get(`http://localhost:3001/logtime`).then(response => {\n    //         const logtimes = []\n    //         for (let i of response.data) {\n    //             if (i.user_id == id) {\n    //                 logtimes.push(i);\n    //             }\n    //         }\n    //         setLogTime(logtimes);\n    //         console.log(logtimes)\n    //     });\n    // })\n\n    return (\n        <>\n            <div style={{ textAlign: 'center' }}>\n                <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Welcome, {employee.fname} </h1>\n                <h2>\n                    {/* <a href=\"#logtime\"> Logtime </a> | */}\n                    <a href=\"#payhistory\"> Pay History </a>\n                </h2>\n            </div>\n\n            <div id='personal'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 15, }}> Personal Information </h2>\n                <Button style={{ float: 'right' }} type='submit' className=\"update\" onClick={handleEditRoute} > Update Details </Button>\n\n                <h3> Employee ID: {employee[\"id\"]}</h3>\n                <h3> Full Name: {employee[\"fname\"] + \" \" + employee[\"lname\"]}</h3>\n                <h3> Date of Birth:  {employee[\"dob\"]}  </h3>\n                <h3> Address: {employee[\"address\"] + \" \" + employee[\"suburb\"] + \" \" + employee[\"state\"] + \" \" + employee[\"pcode\"]} </h3>\n                <h3> Bank Number: {maskedBankNo} </h3>\n                <h3> SBS Number: {maskedSBS} </h3>\n                <h3> Department: {employee[\"dept\"]} </h3>\n                <h3> Employment Date: {employee[\"employdate\"]} </h3>\n                <h3> Username: {employee[\"username\"]} </h3>\n                <h3> Password: {maskedPassword} </h3>\n                <h3> Employment Type: {employee[\"employtype\"]}</h3>\n            </div>\n\n            <div id='payhistory'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, }}> Pay History </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Date </th>\n                        <th> Bank Number </th>\n                        <th> Amount $ </th>\n                        <th> Bonus $ </th>\n                        <th> Description </th>\n                    </tr>\n                    <tr>\n                        <td> dd/mm/yyyy </td>\n                        <td> 123 </td>\n                        <td> 70000 </td>\n                        <td> 5000 </td>\n                        <td> Business Claim </td>\n                    </tr>\n                </table>\n            </div>\n\n            {/* <div id='logtime'>\n                <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingTop: 15, paddingBottom: 15, }}> Logtime </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Login ID </th>\n                        <th> Login Date and Time </th>\n                        <th> Logout Date and Time </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> 10 am </td>\n                        <td> 10 pm </td>\n                    </tr>\n                </table>\n            </div> */}\n        </>\n    );\n};\n\nconst Personal = () => {\n    return <WebLayout content={Content()} />;\n};\n\nexport default Personal;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { useRouteMatch } from 'react-router-dom';\nimport WebLayout from './components/WebLayout';\nimport payrollService from './services/Payroll';\nimport './style.css';\n\nconst Content = () => {\n  const match = useRouteMatch('/UpdatePayroll/:id');\n  const [payroll, setPayroll] = useState({\n    fname: '', lname: '', amount: '',\n    bonus: '', paydate: '', paymethod: '',\n    description: '',\n  });\n\n  const showPayroll = () => {\n    return payroll !== undefined ? payroll : \"\";\n  }\n\n const { fname, lname, amount, bonus, paydate, paymethod, description } = payroll;\n \n useEffect(() => {\n    payrollService.get(match.params.id).then(e => setPayroll(e))\n  }, [])\n\n  console.log(\"payroll test: \", payroll)\n  console.log(\"match params id type\", typeof match.params.id)\n\n  const onInputChange = e => {\n    setPayroll({...payroll, [e.target.name]: e.target.value})\n  }\n\n  // takes id from payroll history\n  const onSubmit = async e => {\n    await axios.put(`http://localhost:3001/payrolldb/${match.params.id}`, payroll)\n    window.location = \"/PayrollHistory\"\n  }\n\n  function goBack(e) {\n    e.preventDefault();\n    var option = window.confirm(\"Do you want leave the page?\\n\\nSelect OK to go back and data will not be saved\\n\\nSelect CANCEL to remain on the page\")\n    if (option === true) { window.history.back(); }\n  }\n\n  //validate update payroll form to ensure correct data in entered before submit the form or execute the update function\n  function handleSubmit(e) {\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); }\n    function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n    // takes the inputs in the form and updates according to the information provided\n    e.preventDefault();\n    var s = window.confirm(\"Do you wish to update the payroll details with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to remain on the page\");\n    if (s === true) {\n      console.log(document.forms)\n      var fname = document.forms[\"payrollform\"][\"fname\"].value;\n      var lname = document.forms[\"payrollform\"][\"lname\"].value;\n      var amount = document.forms[\"payrollform\"][\"amount\"].value;\n      var bonus = document.forms[\"payrollform\"][\"bonus\"].value;\n      var paymethod = document.forms[\"payrollform\"][\"paymethod\"].value;\n      var paydate = document.forms[\"payrollform\"][\"paydate\"].value;\n      var description = document.forms[\"payrollform\"][\"description\"].value;\n    \n      // cases that ensure the user inputs are valid\n      if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n      else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n      else if (amount === \"\" || isNumber(amount) === false) { alert(\"Amount field is empty or invalid format input\"); }\n      else if (bonus === \"\" || isNumber(bonus) === false) { alert(\"Contact Number field is empty or invalid format input\"); }\n      else if (paymethod === \"\" || isText(paymethod) === false) { alert(\"Pay Method field is empty or invalid format input\"); }\n      else if (description === \"\") { alert(\"Provide payment reason for this payroll\"); }\n      else if ((new Date().getFullYear() - new Date(paydate).getFullYear()) >= 3) { alert(\"Payment cannot exceed 3 years\"); }\n      else { onSubmit() }\n    }\n    else {document.getElementById(\"payrollform\").reset()}\n  }\n\n  return (\n  <>\n      <div>\n        <form id='payrollform' name='payrollform' onSubmit={e => onSubmit(e)}>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Update {showPayroll().fname}'s Payroll Details </h1>\n          <p style={{ textAlign: 'center' }}> {' '} Please fill out the payroll details{' '} </p>\n          <label> First Name: </label>\n          <small>Up to 255 Characters </small> <p> </p>\n          <input\n            type=\"text\"\n            defaultValue={showPayroll().fname}\n            name=\"fname\"\n            className=\"formtextfield\"\n            value={fname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Last Name: </label> <small>Up to 255 Characters </small> <p></p>\n          <input\n            type=\"text\"\n            name=\"lname\"\n            defaultValue={showPayroll().lname}\n            className=\"formtextfield\"\n            value={lname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Amount: ($) </label> <small> Up to 15 Digits </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showPayroll().amount}\n            maxLength=\"15\"\n            name=\"amount\"\n            className=\"formtextfield\"\n            value={amount}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Bonus: ($) </label> <small> Up to 6 Digits </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showPayroll().bonus}\n            name=\"bonus\" maxLength=\"6\"\n            className=\"formtextfield\"\n            value={bonus}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <p />\n\n          <label> Pay Date: </label>{' '}\n          <small> Use the calendar on the right </small> <p />\n          <input\n            type=\"date\"\n            defaultValue={showPayroll().paydate}\n            name=\"paydate\"\n            value={paydate}\n            className=\"formtextfield\"\n            onChange={e => onInputChange(e)} />{' '}\n          <p />\n\n          <label> Payment Method: </label> <br />\n          <select name=\"paymethod\" className=\"formtextfield\" value={paymethod} defaultValue={showPayroll().paymethod} onChange={e => onInputChange(e)} required>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"cash\"> Cash </option>\n            <option value=\"cheque\"> Cheque </option>\n            <option value=\"eftpos\"> EFTPOS </option>\n            <option value=\"others\"> Other </option>\n          </select>{' '}\n          <p />\n\n          <label> Description: </label> <small> Up to 500 Characters. Type 'n/a' if unapplicable. </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showPayroll().description}\n            name=\"description\" maxLength=\"500\"\n            className=\"formtextfield\"\n            value={description}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit} > Update <b>{showPayroll().fname}</b> </button>{' '}\n          </div>\n        </form>\n      </div>\n    </> \n  );\n};\n\nconst UpdatePayroll = () => {\n  return <WebLayout content={Content()} />;\n}\n\nexport default UpdatePayroll;","import React from 'react';\nimport EmployeeWebLayout from './components/EmployeeWebLayout';\nimport { useRouteMatch } from 'react-router-dom'\n\nconst TestText = () => {\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Hello, Employee </h1>\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> Announcement </h2>\n      <li>\n        System maintenance is due at midnight to tomorrow 7am. Ensure not to use the system during the maintenance time\n        as changed information may not be saved.\n      </li>\n      <li> Starting next year, a new payment policy is apply. Please read the new policy in the \"Payment Policy\" page. </li>\n      <li> End of year party ticket is open, date and time is to be annouce. </li>\n      <br /><p />\n\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> General Information </h2>\n      <li>\n        As an employee from departments other than Human Resource (HR), also known as the employee in the EMS system, you will not have the\n        priviledge to add, delete and modify other employees information. However, you can view and update your personal infromation\n        as well as launch application and files complaints.\n      </li>\n      <li>\n        As an employee, it is your responsibilities to ensure that all the provided information are accurate, relevant and recent.\n        Thus, all submitted applications and complaints are valid and reasonable.\n      </li>\n      <li>\n        EMS user are expected to visit and check the system regularly for new/updated information\n        such as changes in application and complaints status or simply daily annoucement\n      </li>\n      <br /><p />\n\n      <h2 style={{ textAlign: 'left', fontSize: 20, textDecorationLine: 'overline', paddingBottom: 5, }}> Navigation in EMS </h2>\n      <p>\n        The navigations are categorised into groups including:\n        <li> Lauch Application - Complete the application form and submit </li>\n        <li> File Complaints - complete the complaint form and submit </li>\n        <li> Voice Concern - Acts as a discussion board where users can dicuss anonymously </li>\n        <li> Personal File - View information including: information, logtime, pay history, submmited application and compliants </li>\n      </p>\n\n      <p>\n        <br></br>\n        <i>Many thanks,</i>\n        <br></br>\n        Martin Lym <br></br>\n        <br></br>\n        Human Resources Manager <br></br>\n        <b>Enterprise Management Systems</b>\n      </p>\n\n    </div>\n  );\n};\n\nconst EmployeeDashboard = () => {\n  const match = useRouteMatch('/EmployeeDashboard/:id')\n  return <EmployeeWebLayout id={match.params.id} content={TestText()} />;\n};\n\nexport default EmployeeDashboard;\n","import React from 'react';\nimport WebLayout from './components/WebLayout';\nimport { Link } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router';\nimport paymentPolicyText from './paymentPolicyText.json';\n\nlet text = '';\npaymentPolicyText.data.forEach(element => {\n    text += element + '\\n';\n});\n\nconst Content = () => {\n    const match = useRouteMatch('/UpdatePolicy/:id');\n    return (\n        <div>\n            <div className=\"navbar\">\n                <ul>\n                    <li> <button> Bullet Point </button> </li>\n                    <li> <button> Bold </button> </li>\n                    <li> <button> Italic </button> </li>\n                    <li> <button> Underline </button> </li>\n                    <li> <button> Text Color </button> </li>\n                </ul>\n            </div>\n            <div>\n                <form>\n                    <textarea\n                        type=\"text\"\n                        className=\"formtextfield\"\n                        cols=\"50\" rows=\"50\">\n                        {text}\n                    </textarea>\n\n                    <div style={{ textAlign: 'center', paddingTop: 10 }}>\n                        <Link to={`/PaymentPolicy/${match.params.id}`}> <button className=\"button\"> Updated New Policy </button> </Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nconst UpdatePolicy = () => {\n    const match = useRouteMatch('/UpdatePolicy/:id');\n    return <WebLayout  content={Content()} />;\n};\n\nexport default UpdatePolicy;\n","import WebLayout from './components/WebLayout';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useRouteMatch } from 'react-router';\n\nconst Content = () => {\n    const [payroll, setPayroll] = useState({\n        empid: \"\",\n        fname: \"\", lname: \"\",\n        amount: \"\", bonus: \"\",\n        paydate: \"\", paymethod: \"\",\n        description: \"\"\n    });\n\n    const { empid, fname, lname, amount, bonus, paydate, paymethod, description } = payroll;\n\n    const onInputChange = e => {\n        setPayroll({ ...payroll, [e.target.name]: e.target.value })\n    };\n\n    //execute add function to create new payroll\n    const onSubmit = async e => {\n        await axios.post(\"http://localhost:3001/payrolldb\", payroll);\n        window.location = \"./PayrollHistory\";\n    };\n\n    //handle create payroll form validation\n    //will display notification when incorrect format input and prevent from proceed to next page\n    function handleSubmit(e) {\n        function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); }\n        function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n        e.preventDefault();\n        var s = window.confirm(\"Do you want add a new user with the entered information?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to reset form\");\n        if (s === true) {\n            var empid = document.forms[\"payrollform\"][\"empid\"].value;\n            var fname = document.forms[\"payrollform\"][\"fname\"].value;\n            var lname = document.forms[\"payrollform\"][\"lname\"].value;\n            var amount = document.forms[\"payrollform\"][\"amount\"].value;\n            var bonus = document.forms[\"payrollform\"][\"bonus\"].value;\n            var description = document.forms[\"payrollform\"][\"description\"].value;\n            var paydate = document.forms[\"payrollform\"][\"paydate\"].value;\n\n            if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n            else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n            else if (empid === \"\" || isNumber(empid) === false) { alert(\"ID field is empty or invalid format input\"); }\n            else if (amount === \"\" || isNumber(amount) === false) { alert(\"Amount field is empty or invalid format input\"); }\n            else if (bonus === \"\" || isNumber(bonus) === false) { alert(\"Contact Number field is empty or invalid format input\"); }\n            else if (description === \"\") { alert(\"Provide payment reason for this payroll\"); }\n            else if ((new Date().getFullYear() - new Date(paydate).getFullYear()) >= 3) { alert(\"Payment cannot exceed 3 years\"); }\n            else { onSubmit(); }\n        }\n        else { document.getElementById(\"payrollform\").reset(); }\n    }\n\n    //the payroll form enable admin to create new payroll for each payment paid\n    //each element has an input validation such that correct data inputted into each field\n    //the button called the create/add function when selected to store the data into the database\n    return (\n        <>\n            <div>\n                <form id='payrollform' name='payrollform' onSubmit={e => onSubmit(e)} >\n                    <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Create New Payroll </h1>\n                    <p style={{ textAlign: 'center' }}> {' '} Please fill out the payroll details </p>\n                    <label> Pay Date: </label>\n                    <input\n                        type=\"date\"\n                        name=\"paydate\"\n                        className=\"formtextfield\"\n                        value={paydate}\n                        onChange={e => onInputChange(e)}\n                    />{' '}\n                    <br />\n\n                    <label> Employee ID: </label>\n                    <input\n                        type=\"number\"\n                        placeholder=\"Employee ID\"\n                        name=\"empid\"\n                        className=\"formtextfield\"\n                        value={empid}\n                        onChange={e => onInputChange(e)}\n                    />{' '}\n                    <br />\n\n                    <label> Employee First Name: </label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        name=\"fname\"\n                        className=\"formtextfield\"\n                        value={fname}\n                        onChange={e => onInputChange(e)}\n                    />{' '}\n                    <br />\n\n                    <label> Employee Last Name: </label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        name=\"lname\"\n                        className=\"formtextfield\"\n                        value={lname}\n                        onChange={e => onInputChange(e)}\n                    />{' '}\n                    <br />\n\n                    <label> Amount $: </label>\n                    <p />\n                    <input\n                        type=\"number\"\n                        placeholder=\"Current Pay\"\n                        name=\"amount\"\n                        className=\"formtextfield\"\n                        value={amount}\n                        onChange={e => onInputChange(e)}\n                    />{' '}\n                    <br />\n\n                    <label> Bonus $: </label>\n                    <p />\n                    <input\n                        type=\"number\"\n                        placeholder=\"Bonus\"\n                        name=\"bonus\"\n                        className=\"formtextfield\"\n                        value={bonus}\n                        onChange={e => onInputChange(e)}\n                    />{' '}\n                    <br />\n\n                    <label> Payment Method: </label> <br />\n                    <select name=\"paymethod\" className=\"formtextfield\" value={paymethod} onChange={e => onInputChange(e)}>\n                        <option value=\"select\"> -- Select one -- </option>\n                        <option value=\"cash\"> Cash </option>\n                        <option value=\"cheque\"> Cheque </option>\n                        <option value=\"eftpos\"> EFTPOS </option>\n                        <option value=\"others\"> Others </option>\n                    </select>{' '}\n                    <p />\n\n                    <label> Description </label>\n                    <p />\n                    <textarea\n                        type=\"text\"\n                        placeholder=\"Payment Reason\"\n                        name=\"description\"\n                        className=\"formtextfield\"\n                        value={description}\n                        onChange={e => onInputChange(e)}\n                    />{' '}\n                    <br />\n                    <div style={{ textAlign: 'center', paddingTop: 10 }}>\n                        <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit}> Create New Payroll </button>{' '}\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n};\n\nconst AddPayroll = () => {\n    return <WebLayout  content={Content()} />;\n};\n\nexport default AddPayroll;\n","import axios from \"axios\";\nconst baseUrl = \"/api/voiceconcern\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObj => {\n  return axios.post(baseUrl, newObj);\n};\n\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };","import { Button, Divider, Space, Table, Input, Select, DatePicker } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport WebLayout from './components/WebLayout';\nimport voiceconcernService from \"./services/Concern\";\nimport axios from 'axios';\n\nconst { Column } = Table;\nconst { Option } = Select;\n\nconst Content = () => {\n  const [voiceconcern, setConcern] = useState([]);\n\n  const [nameFilter, setNameFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n\n  // const [displayList, setDisplayList] = useState([])\n\n  useEffect(() => {\n    voiceconcernService.getAll().then(voiceconcern => {\n      setConcern(voiceconcern);\n      // setDisplayList(voiceconcern);\n    })\n  }, [])\n\n  // filters the values with all the inputs\n  const filteredList = () => {\n    return voiceconcern.filter(\n      c =>\n        c.status.match(statusFilter) &&\n        c.discussdate.match(dateFilter) &&\n        (c.name.toLowerCase().match(nameFilter.toLowerCase()))\n    );\n  };\n\n  // updates each input\n  const handleChangeType = event => {\n    setNameFilter(event);\n  };\n\n  const handleChangeStatus = event => {\n    setStatusFilter(event);\n  };\n\n  const handleChangeDate = event => {\n    console.log(event);\n    event !== null ? setDateFilter(event._d.toJSON().substr(0, 9)) : setDateFilter('');\n    console.log('date filter: ', dateFilter);\n  };\n\n  //execute delete payroll based on id after select the \"delete\" button\n  const handleDelete = async e => {\n    var option = window.confirm(\"Do you want to resolve the concern with ID \" + e.currentTarget.id + \"? \\n\\n Select OK to delete or CANCEL action\");\n\n    if (option === true) {\n      for (let i of voiceconcern) {\n        if (e.currentTarget.id === i.id) {\n          var concern = Object.assign({}, i);\n          concern.status = \"solved\";\n          await axios.put(`http://localhost:3001/voiceconcern/${e.currentTarget.id}`, concern);\n          break;\n        }\n      }\n      window.location = \"./ConcernList\"\n    }\n  }\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Employee Concerns </h1>\n        <br />\n        <Input.Group compact>\n          <Input\n            size=\"large\"\n            style={{ width: '20%' }}\n            placeholder=\"Name\"\n            onChange={({ target }) => {\n              setNameFilter(target.value);\n            }}\n          />\n\n          <DatePicker size=\"large\" onChange={handleChangeDate} />\n\n          <Select\n            id=\"type\"\n            placeholder=\"Status\"\n            size=\"large\"\n            style={{ width: '20%' }}\n            onChange={handleChangeStatus}\n            allowClear>\n            <Option value=\"pending\">Pending</Option>\n            <Option value=\"solved\">Solved</Option>\n          </Select>\n        </Input.Group>\n        <br />\n        <p />\n      </div>\n\n\n      <div style={{ paddingTop: 10 }}>\n        <Table dataSource={filteredList()}>\n          <Column title=\"Concern ID\" dataIndex=\"id\" key=\"id\" />\n          <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n          <Column title=\"Topic\" dataIndex=\"topic\" key=\"topic\" />\n          <Column title=\"Goal\" dataIndex=\"achivementgoal\" key=\"achivementgoal\" />\n          <Column title=\"Method\" dataIndex=\"methodachievement\" key=\"methodachievement\" />\n          <Column title=\"Discuss Date\" dataIndex=\"discussdate\" key=\"discussdate\" />\n          <Column title=\"Status\" dataIndex=\"status\" key=\"status\" />\n          <Column title=\"Options\" key=\"id\" render={(p) => (\n            <>\n              <Space split={<Divider type=\"vertical\" />}>\n                <Button id={p.id} onClick={handleDelete}> Solved</Button>\n              </Space>\n            </>\n          )} />\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst ConcernList = () => {\n  return <WebLayout content={Content()} />;\n};\n\nexport default ConcernList;\n","import React, { useEffect, useState } from 'react';\nimport WebLayout from './components/WebLayout';\nimport employeeService from './services/Employee';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nconst Content = () => {\n    const match = useRouteMatch('/Profile/:id');\n    const [employee, setEmployee] = useState();\n    const history = useHistory();\n    const MaskData = require('maskdata');\n\n    function goBack() { window.history.back(); }\n\n    const showEmployee = () => {\n        return employee !== undefined ? employee : \"\"\n    }\n\n    useEffect(() => {\n        employeeService.get(match.params.id).then(emp => setEmployee(emp));\n    }, []);\n\n    const handleEditRoute = e => {\n        history.push({\n            pathname: `/UpdateUser/${employee.id}`\n        })\n    }\n\n    const maskPasswordOptions = {\n        maskWith: \"*\", //default masking value \n        maxMaskedCharacters: 20, //number of masking value is limited to 20\n        unMaskedCharacters: 0, //to show unmasked value - first\n        unMaskedEndCharacters: 0 //to show unmasked value - last\n    };\n\n    const maskCardOptions = {\n        maskWith: \"X\", //default masking value\n        unmaskedStartDigits: 10, // max value is 10\n        unmaskedEndDigits: 1\n    };\n\n    const password = showEmployee().pwd;\n    const maskedPassword = MaskData.maskPassword(password, maskPasswordOptions); //mask password\n\n    const bankno = showEmployee().accnum;\n    const maskedBankNo = MaskData.maskPassword(bankno, maskCardOptions); //mask bank number details\n\n    const sbs = showEmployee().accbsb;\n    const maskedSBS = MaskData.maskPassword(sbs, maskCardOptions); //mask sbs number details\n\n    return (\n        <>\n            <div style={{ textAlign: 'center' }}>\n                <button style={{ float: 'left' }} type='submit' className=\"update\" onClick={goBack} > Back </button>\n                <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold' }}>\n                    Welcome, {showEmployee().fname + \" \" + showEmployee().lname}\n                </h1>\n                <h2>\n                    <a href=\"#applicationsubmit\"> Application Submitted </a> |\n                    <a href=\"#complaintsubmit\"> Complaint Submitted </a> |\n                    <a href=\"#payhistory\"> Pay History </a>\n                </h2>\n            </div>\n\n            <div id=\"personal\">\n                <h2\n                    style={{\n                        textAlign: 'left',\n                        fontSize: 20,\n                        textDecorationLine: 'underline',\n                        paddingBottom: 15,\n                    }}>\n                    Personal Information{' '}\n                </h2>\n\n                <button style={{ float: 'right' }} type=\"submit\" className=\"update\" onClick={handleEditRoute}> {' '} Update Details{' '} </button>\n                <h3> <b>Employee ID:</b> {showEmployee().id}</h3>\n                <h3> <b>Full Name:</b> {showEmployee().fname + \" \" + showEmployee().lname}</h3>\n                <h3> <b>Date of Birth:</b> {showEmployee().dob}</h3>\n                <h3> <b>Address:</b> {showEmployee().address + \" \" + showEmployee().suburb + \" \" + showEmployee().pcode}</h3>\n                <h3> <b>Bank Number:</b>. {maskedBankNo} </h3>\n                <h3> <b>SBS:</b> {maskedSBS}</h3>\n                <h3> <b>Department:</b> {showEmployee().dept}</h3>\n                <h3> <b>Employment Date:</b> {showEmployee().employdate}</h3>\n                <h3> <b>Username:</b> {showEmployee().username}</h3>\n                <h3> <b>Password:</b> {maskedPassword}</h3>\n                <h3> <b>Employment Type:</b> {showEmployee().employtype}</h3>\n            </div>\n\n            <div id=\"applicationsubmit\">\n                <h2\n                    style={{\n                        textAlign: 'left',\n                        fontSize: 20,\n                        textDecorationLine: 'overline',\n                        paddingTop: 15,\n                        paddingBottom: 15,\n                    }}>\n                    {' '}\n                    Application Submitted{' '}\n                </h2>\n                <table className=\"table\">\n                    <tr>\n                        <th> Application ID </th>\n                        <th> Date Submitted </th>\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Status </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> dd/mm/yyyy </td>\n                        <td> apply leave </td>\n                        <td> description </td>\n                        <td>\n                            {' '}\n                            pending <br /> approved <br /> declined <br />{' '}\n                        </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id=\"complaintsubmit\">\n                <h2\n                    style={{\n                        textAlign: 'left',\n                        fontSize: 20,\n                        textDecorationLine: 'overline',\n                        paddingTop: 15,\n                        paddingBottom: 15,\n                    }}>\n                    {' '}\n                    Complaints Submitted{' '}\n                </h2>\n\n                <table className=\"table\">\n                    <tr>\n                        <th> Complaint ID </th>\n                        <th> Date Submitted </th>\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Status </th>\n                    </tr>\n                    <tr>\n                        <td> 1 </td>\n                        <td> dd/mm/yyyy </td>\n                        <td> work issue </td>\n                        <td> description </td>\n                        <td>\n                            {' '}\n                            pending <br /> solved <br />{' '}\n                        </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div id=\"payhistory\">\n                <h2\n                    style={{\n                        textAlign: 'left',\n                        fontSize: 20,\n                        textDecorationLine: 'overline',\n                        paddingTop: 15,\n                    }}>\n                    {' '}\n                    Pay History{' '}\n                </h2>\n\n                <table className=\"table\">\n                    <tr>\n                        <th> Date </th>\n                        <th> Bank Number </th>\n                        <th> Amount $ </th>\n                        <th> Bonus $ </th>\n                        <th> Description </th>\n                    </tr>\n                    <tr>\n                        <td> dd/mm/yyyy </td>\n                        <td> 123 </td>\n                        <td> 70000 </td>\n                        <td> 5000 </td>\n                        <td> Business Claim </td>\n                    </tr>\n                </table>\n            </div>\n        </>\n    );\n};\n\nconst Profile = () => {\n    const match = useRouteMatch('/Profile/:id');\n    return <WebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default Profile;\n\n","import React, { useEffect, useState } from 'react';\nimport EmployeeWebLayout from './components/EmployeeWebLayout';\nimport employeeService from './services/Employee';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nconst Content = () => {\n  const match = useRouteMatch('/EmployeePersonal/:id');\n  const [employee, setEmployee] = useState();\n  const history = useHistory();\n\n  const MaskData = require('maskdata');\n\n  const showEmployee = () => {\n    return employee !== undefined ? employee : \"\"\n  }\n\n  useEffect(() => {\n    employeeService.get(match.params.id).then(emp => setEmployee(emp));\n  }, []);\n\n  const handleEditRoute = e => {\n    history.push({\n      pathname: `/UpdateUser/${employee.id}`\n    })\n  }\n\n  const maskPasswordOptions = {\n    maskWith: \"*\", //default masking value \n    maxMaskedCharacters: 20, //number of masking value is limited to 20\n    unMaskedCharacters: 0, //to show unmasked value - first\n    unMaskedEndCharacters: 0 //to show unmasked value - last\n  };\n\n  const maskCardOptions = {\n    maskWith: \"X\", //default masking value\n    unmaskedStartDigits: 10, // max value is 10\n    unmaskedEndDigits: 1\n  };\n\n  const password = showEmployee().pwd;\n  const maskedPassword = MaskData.maskPassword(password, maskPasswordOptions); //mask password\n\n  const bankno = showEmployee().accnum;\n  const maskedBankNo = MaskData.maskPassword(bankno, maskCardOptions); //mask bank number details\n\n  const sbs = showEmployee().accbsb;\n  const maskedSBS = MaskData.maskPassword(sbs, maskCardOptions); //mask sbs number details\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold' }}>\n          Welcome, {showEmployee().fname + \" \" + showEmployee().lname}\n        </h1>\n        <h2>\n          <a href=\"#applicationsubmit\"> Application Submitted </a> |\n          <a href=\"#complaintsubmit\"> Complaint Submitted </a> |\n          <a href=\"#payhistory\"> Pay History </a>\n        </h2>\n      </div>\n\n      <div id=\"personal\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'underline',\n            paddingBottom: 15,\n          }}>\n          Personal Information{' '}\n        </h2>\n        <button style={{ float: 'right' }} type=\"submit\" className=\"update\" onClick={handleEditRoute}>\n          {' '}\n          Update Details{' '}\n        </button>\n        <h3> <b>Employee ID:</b> {showEmployee().id}</h3>\n        <h3> <b>Full Name:</b> {showEmployee().fname + \" \" + showEmployee().lname}</h3>\n        <h3> <b>Date of Birth:</b> {showEmployee().dob}</h3>\n        <h3> <b>Address:</b> {showEmployee().address + \" \" + showEmployee().suburb + \" \" + showEmployee().pcode}</h3>\n        <h3> <b>Bank Number:</b>. {maskedBankNo} </h3>\n        <h3> <b>SBS Number:</b>. {maskedSBS} </h3>\n        <h3> <b>Department:</b> {showEmployee().dept}</h3>\n        <h3> <b>Employment Date:</b> {showEmployee().employdate}</h3>\n        <h3> <b>Username:</b> {showEmployee().username}</h3>\n        <h3> <b>Password:</b> {maskedPassword}</h3>\n        <h3> <b>Employment Type:</b> {showEmployee().employtype}</h3>\n      </div>\n\n      {/* <div id=\"applicationsubmit\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'overline',\n            paddingTop: 15,\n            paddingBottom: 15,\n          }}>\n          {' '}\n          Application Submitted{' '}\n        </h2>\n        <table className=\"table\">\n          <tr>\n            <th> Application ID </th>\n            <th> Date Submitted </th>\n            <th> Name </th>\n            <th> Description </th>\n            <th> Status </th>\n          </tr>\n          <tr>\n            <td> 1 </td>\n            <td> dd/mm/yyyy </td>\n            <td> apply leave </td>\n            <td> description </td>\n            <td>\n              {' '}\n              pending <br /> approved <br /> declined <br />{' '}\n            </td>\n          </tr>\n        </table>\n      </div>\n\n      <div id=\"complaintsubmit\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'overline',\n            paddingTop: 15,\n            paddingBottom: 15,\n          }}>\n          {' '}\n          Complaints Submitted{' '}\n        </h2>\n        <table className=\"table\">\n          <tr>\n            <th> Complaint ID </th>\n            <th> Date Submitted </th>\n            <th> Name </th>\n            <th> Description </th>\n            <th> Status </th>\n          </tr>\n          <tr>\n            <td> 1 </td>\n            <td> dd/mm/yyyy </td>\n            <td> work issue </td>\n            <td> description </td>\n            <td>\n              {' '}\n              pending <br /> solved <br />{' '}\n            </td>\n          </tr>\n        </table>\n      </div>\n\n      <div id=\"payment-updates\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'overline',\n            paddingTop: 15,\n            paddingBottom: 15,\n          }}>\n          {' '}\n          Salary Update Requests{' '}\n        </h2>\n        <table className=\"table\">\n          <tr>\n            <th> Request ID </th>\n            <th> Date Submitted </th>\n            <th> Name </th>\n            <th> Description </th>\n            <th> Requested Salary </th>\n            <th> Status </th>\n          </tr>\n          <tr>\n            <td> 1 </td>\n            <td> dd/mm/yyyy </td>\n            <td> work issue </td>\n            <td> description </td>\n            <td> $80,000 </td>\n            <td>\n              {' '}\n              pending <br /> solved <br />{' '}\n            </td>\n          </tr>\n        </table>\n      </div>\n\n      <div id=\"logtime\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'overline',\n            paddingTop: 15,\n            paddingBottom: 15,\n          }}>\n          {' '}\n          Logtime{' '}\n        </h2>\n        <table className=\"table\">\n          <tr>\n            <th> Login ID </th>\n            <th> Login Date and Time </th>\n            <th> Logout Date and Time </th>\n          </tr>\n          <tr>\n            <td> 1 </td>\n            <td> 10 am </td>\n            <td> 10 pm </td>\n          </tr>\n        </table>\n      </div>\n\n      <div id=\"payhistory\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'overline',\n            paddingTop: 15,\n          }}>\n          {' '}\n          Pay History{' '}\n        </h2>\n        <table className=\"table\">\n          <tr>\n            <th> Date </th>\n            <th> Bank Number </th>\n            <th> Amount $ </th>\n            <th> Bonus $ </th>\n            <th> Description </th>\n          </tr>\n          <tr>\n            <td> dd/mm/yyyy </td>\n            <td> 123 </td>\n            <td> 70000 </td>\n            <td> 5000 </td>\n            <td> Business Claim </td>\n          </tr>\n        </table>\n      </div>\n\n      <div id=\"transfer-requests\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'overline',\n            paddingTop: 15,\n            paddingBottom: 15,\n          }}>\n          {' '}\n          Branch Transfer Requests{' '}\n        </h2>\n        <table className=\"table\">\n          <tr>\n            <th> Transfer ID </th>\n            <th> Date Submitted </th>\n            <th> Name </th>\n            <th> Description </th>\n            <th> Current Branch </th>\n            <th> New Branch </th>\n            <th> Status </th>\n          </tr>\n          <tr>\n            <td> 1 </td>\n            <td> dd/mm/yyyy </td>\n            <td> work issue </td>\n            <td> description </td>\n            <td> Bankstown </td>\n            <td> Canley Vale </td>\n            <td>\n              {' '}\n              pending <br /> solved <br />{' '}\n            </td>\n          </tr>\n        </table>\n      </div>\n\n      <div id=\"resignation\">\n        <h2\n          style={{\n            textAlign: 'left',\n            fontSize: 20,\n            textDecorationLine: 'overline',\n            paddingTop: 15,\n            paddingBottom: 15,\n          }}>\n          {' '}\n          Resignation Requests{' '}\n        </h2>\n        <table className=\"table\">\n          <tr>\n            <th> Resignation ID </th>\n            <th> Date Submitted </th>\n            <th> Name </th>\n            <th> Description </th>\n            <th> Status </th>\n          </tr>\n          <tr>\n            <td> 1 </td>\n            <td> dd/mm/yyyy </td>\n            <td> work issue </td>\n            <td> description </td>\n            <td> received</td>\n          </tr>\n        </table>\n      </div> */}\n    </>\n  );\n};\n\nconst EmployeePersonal = () => {\n  const match = useRouteMatch('/EmployeePersonal/:id');\n  return <EmployeeWebLayout id={match.params.id} content={Content()} />;\n};\n\nexport default EmployeePersonal;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { useRouteMatch } from 'react-router-dom';\nimport WebLayout from './components/WebLayout';\nimport employeeService from './services/Employee';\nimport './style.css';\n\nconst Content = () => {\n  const match = useRouteMatch('/UpdateUser/:id');\n  console.log('match: ', match)\n  const [employee, setEmployee] = useState({\n    fname: '',\n    lname: '',\n    dob: '',\n    phoneno: '',\n    username: '',\n    pwd: '',\n    accname: '',\n    accnum: '',\n    accbsb: '',\n    address: '',\n    suburb: '',\n    state: '',\n    pcode: '',\n    employdate: '',\n    dept: '',\n    employmentType: '',\n  });\n\n  const showEmployee = () => {\n    return employee !== undefined ? employee : \"\";\n  }\n\n const {\n    fname, lname, dob, phoneno,\n    username, pwd,\n    accname, accnum, accbsb,\n    address, suburb, state, pcode,\n    employdate, dept, employtype\n  } = employee;\n\n  useEffect(() => {\n    employeeService.get(match.params.id).then(e => setEmployee(e))\n  }, [])\n\n  console.log(\"employee test: \", employee)\n  console.log(\"match params id type\", typeof match.params.id)\n\n  const onInputChange = e => {\n    setEmployee({...employee, [e.target.name]: e.target.value})\n  }\n\n  const onSubmit = async e => {\n    await axios.put(`http://localhost:3001/employees/${match.params.id}`, employee)\n    window.location = `/EmployeePersonal/${employee.id}`\n  }\n\n  function goBack(e) {\n    e.preventDefault();\n    var option = window.confirm(\"Do you want leave the page?\\n\\nSelect OK to go back and data will not be saved\\n\\nSelect CANCEL to remain on the page\")\n    if (option === true) { window.history.back(); }\n  }\n\n  function handleSubmit(e) {\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); }\n    function isName(name) { return /^-?[a-zA-Z0-9._%+-]+@EMS[HR,OP,MK,FN]{2}$/.test(name) }\n    function isText(text) { return (/^[A-Za-z]+$/).test(text) }\n\n    e.preventDefault();\n    var s = window.confirm(\"Do you update the information with entered data?\\n\\nSelect OK to proceed\\n\\nSelect CANCEL to remain on the page\");\n    if (s === true) {\n      console.log(document.forms)\n      var fname = document.forms[\"updateform\"][\"fname\"].value;\n      var lname = document.forms[\"updateform\"][\"lname\"].value;\n      var dob = document.forms[\"updateform\"][\"dob\"].value;\n      var username = document.forms[\"updateform\"][\"username\"].value;\n      var pwd = document.forms[\"updateform\"][\"pwd\"].value;\n      var phoneno = document.forms[\"updateform\"][\"phoneno\"].value;\n      var accname = document.forms[\"updateform\"][\"accname\"].value;\n      var accnum = document.forms[\"updateform\"][\"accnum\"].value;\n      var accbsb = document.forms[\"updateform\"][\"accbsb\"].value;\n      var address = document.forms[\"updateform\"][\"address\"].value;\n      var suburb = document.forms[\"updateform\"][\"suburb\"].value;\n      var state = document.forms[\"updateform\"][\"state\"].value;\n      var pcode = document.forms[\"updateform\"][\"pcode\"].value;\n      var employtype = document.forms[\"updateform\"][\"employtype\"].value;\n      var employdate = document.forms[\"updateform\"][\"employdate\"].value;\n      var dept = document.forms[\"updateform\"][\"dept\"].value;\n\n      if (fname === \"\" || isText(fname) === false) { alert(\"First Name field is empty or invalid format input\"); }\n      else if (lname === \"\" || isText(lname) === false) { alert(\"Last Name field is empty or invalid format input\"); }\n      else if (dob === \"\") { alert(\"Date of Birth field must be select\"); }\n      else if (username === \"\" || isName(username) === false) { alert(\"Username field is empty or invalid format input \\n\\n Follow the given format\"); }\n      else if (pwd === \"\") { alert(\"Password field must be filled out\"); }\n      else if (phoneno === \"\" || isNumber(phoneno) === false) { alert(\"Contact Number field is empty or invalid format input\"); }\n      else if (accname === \"\" || isText(accname) === false) { alert(\"Account Name field is empty or invalid format input\"); }\n      else if (accnum === \"\" || isNumber(accnum) === false) { alert(\"Account Number is empty or invalid format input\"); }\n      else if (accbsb === \"\" || isNumber(accbsb) === false) { alert(\"Account BSB field is empty or invalid format input\"); }\n      else if (address === \"\") { alert(\"Address field is empty or invalid format input\"); }\n      else if (suburb === \"\" || isText(suburb) === false) { alert(\"Suburb field is empty or invalid format input\"); }\n      else if (state === \"\" || isText(state) === false) { alert(\"State field is empty or invalid format input\"); }\n      else if (pcode === \"\" || isNumber(pcode) === false) { alert(\"Post Code is empty or invalid format input\"); }\n      else if (employtype === \"\") { alert(\"Employement Type must be select\"); }\n      else if (employdate === \"\") { alert(\"Employement Date must be select\"); }\n      else if (dept === \"\") { alert(\"Department must be select\"); }\n      else if (dob > employdate) { alert(\"Invalid date of birth and employment date\"); }\n      else if ((new Date().getFullYear() - new Date(dob).getFullYear()) <= 18) { alert(\"Employee age must be 18 or over\"); }\n      else { onSubmit() }\n    }\n    else {document.getElementById(\"updateform\").reset()}\n  }\n\n  return (\n  <>\n      <div>\n        <form id='updateform' name='updateform' onSubmit={e => onSubmit(e)}>\n          <h1 style={{ textAlign: 'center', fontSize: 30, fontWeight: 'bold', }}> Update {showEmployee().fname + \" \" + showEmployee().lname} </h1>\n          <p style={{ textAlign: 'center' }}> {' '} Please fill out the details below, all fields are required{' '} </p>\n\n          <label> First Name: </label>\n          <small>Up to 255 Characters </small> <p> </p>\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().fname}\n            name=\"fname\"\n            className=\"formtextfield\"\n            value={fname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Last Name: </label> <small>Up to 255 Characters </small> <p></p>\n          <input\n            type=\"text\"\n            name=\"lname\"\n            defaultValue={showEmployee().lname}\n            className=\"formtextfield\"\n            value={lname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Date of Birth: </label>{' '}\n          <small> Use the calendar on the right </small> <p />\n          <input\n            type=\"date\"\n            defaultValue={showEmployee().dob}\n            name=\"dob\"\n            className=\"formtextfield\"\n            value={dob}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Username: </label> <br />\n          <small>\n            <i> After @ must be the system name 'EMS' followed by one department  initial:\n              HR - Human Resource, OP - Operation, MK - Marketing, FN - Finance </i>\n          </small>{' '}\n          <p />\n          <input\n            type=\"email\"\n            defaultValue={showEmployee().username}\n            name=\"username\"\n            className=\"formtextfield\"\n            value={username}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Password: </label>{' '}\n          <small> Maximum password length is 16 Characters </small> <p />\n          <input\n            type=\"password\"\n            defaultValue={showEmployee().pwd}\n            maxLength=\"16\" name=\"pwd\"\n            value={pwd}\n            className=\"formtextfield\"\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Contact Number: </label> <small> Up to 10 digits </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().phoneno}\n            name=\"phoneno\"\n            maxLength=\"10\"\n            className=\"formtextfield\"\n            value={phoneno}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Bank Account Name: </label> <small> Up to 255 Characters </small>\n          <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().accname}\n            name=\"accname\"\n            className=\"formtextfield\"\n            value={accname}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Bank Account Number: </label>\n          <small> Up to 10 Digits </small>\n          <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().accnum}\n            name=\"accnum\"\n            minLength=\"6\" maxLength=\"10\"\n            className=\"formtextfield\"\n            value={accnum}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> BSB: </label>\n          <small> Up to 6 Digits </small>\n          <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().accbsb}\n            name=\"accbsb\" maxLength=\"6\"\n            className=\"formtextfield\"\n            value={accbsb}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Address: </label> <small> Up to 255 Characters </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().address}\n            maxLength=\"255\"\n            name=\"address\"\n            className=\"formtextfield\"\n            value={address}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Suburb: </label> <small>Up to 255 Characters </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().suburb}\n            maxLength=\"255\"\n            name=\"suburb\"\n            className=\"formtextfield\"\n            value={suburb}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> State: </label> <small> Up 3 Character </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().state}\n            name=\"state\" maxLength=\"3\"\n            className=\"formtextfield\"\n            value={state}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <br />\n\n          <label> Post Code: </label> <small> Up 4 Digits </small> <p />\n          <input\n            type=\"text\"\n            defaultValue={showEmployee().pcode}\n            name=\"pcode\" maxLength=\"4\"\n            className=\"formtextfield\"\n            value={pcode}\n            onChange={e => onInputChange(e)}\n          />{' '}\n          <p />\n\n          <label> Employment Type: </label> <p />\n          <select name=\"employtype\" className=\"formtextfield\" value={employtype} defaultValue={showEmployee().employtype}  onChange={e => onInputChange(e)} >\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"Full-Time\"> Full-Time </option>\n            <option value=\"Part-Time\"> Part-Time </option>\n            <option value=\"Casual\"> Casual </option>\n          </select>{' '}\n\n          <label> Employment Date: </label>{' '}\n          <small> Use the calendar on the right </small> <p />\n          <input\n            type=\"date\"\n            defaultValue={showEmployee().employdate}\n            name=\"employdate\"\n            value={employdate}\n            className=\"formtextfield\"\n            onChange={e => onInputChange(e)} />{' '}\n          <p />\n\n          <label> Department: </label> <br />\n          <select name=\"dept\" className=\"formtextfield\" value={dept} defaultValue={showEmployee().dept} onChange={e => onInputChange(e)} required>\n            <option value=\"select\"> -- Select one -- </option>\n            <option value=\"finance\"> Finance </option>\n            <option value=\"HR\"> Human Resource </option>\n            <option value=\"marketing\"> Marketing </option>\n            <option value=\"operation\"> Operation </option>\n          </select>{' '}\n          <p />\n\n          <div style={{ textAlign: 'center', paddingTop: 10 }}>\n            <button type=\"submit\" id=\"submit\" className=\"button\" onClick={handleSubmit} > Update <b>{showEmployee().username}</b> </button>{' '}\n          </div>\n        </form>\n      </div>\n    </> \n  );\n};\n\nconst UpdateUser = () => {\n  return <WebLayout content={Content()} />;\n}\n\nexport default UpdateUser;\n","export default __webpack_public_path__ + \"static/media/App.e013c7a8.less\";","import { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ProtectedRoute } from './components/protectedRoute';\n\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport Logout from './Logout';\nimport UserList from './UserList';\nimport AddUser from './AddUser';\nimport Roster from './Roster';\nimport DiscussionBoard from './discussionBoard';\nimport PaymentPolicy from './PaymentPolicy';\nimport FileComplaint from './FileComplaint';\nimport Application from './Application';\nimport ApplicationList from './ApplicationList';\nimport PayrollHistory from './PayrollHistory';\nimport UpdateEmployee from './UpdateEmployee';\nimport ComplaintList from './ComplaintList';\nimport Personal from './Personal';\nimport UpdatePayroll from './UpdatePayroll';\nimport EmployeeDashboard from './EmployeeDashboard';\nimport UpdatePolicy from './UpdatePolicy';\nimport AddPayroll from './AddPayroll';\nimport ConcernList from './ConcernList';\nimport Profile from './Profile';\nimport EmployeePersonal from './EmployeePersonal';\nimport UpdateUser from './UpdateUser';\nimport './App.less';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n\n      <Switch>\n        <Route exact path=\"/\" component={Login}></Route>\n        <Route exact path=\"/Logout\" component={Logout} />\n        <Route exact path=\"/ComplaintList\" component={ComplaintList} />\n        <Route exact path=\"/FileComplaint\" component={FileComplaint} />\n        <Route exact path=\"/Dashboard\" component={Dashboard} />\n        <Route exact path=\"/EmployeeDashboard/:id\">\n          <EmployeeDashboard />\n        </Route>\n        <Route exact path=\"/Roster\">\n          <Roster />\n        </Route>\n        <Route exact path=\"/discussionBoard/:id\">\n          <DiscussionBoard />\n        </Route>\n        <Route exact path=\"/ConcernList\">\n          <ConcernList />\n        </Route>\n        <Route exact path=\"/Personal\">\n          {' '}\n          <Personal />{' '}\n        </Route>\n        <Route exact path=\"/EmployeePersonal/:id\">\n          {' '}\n          <EmployeePersonal />{' '}\n        </Route>\n\n        <Route exact path=\"/Profile\">\n          {' '}\n          <Profile />{' '}\n        </Route>\n        <Route exact path=\"/AddUser/:id\">\n          {' '}\n          <AddUser />{' '}\n        </Route>\n        <Route exact path=\"/UserList\">\n          {' '}\n          <UserList />{' '}\n        </Route>\n\n        <Route exact path=\"/UpdateEmployee/:id\">\n          <UpdateEmployee />{' '}\n        </Route>\n        <Route exact path=\"/UpdateUser/:id\">\n          <UpdateUser />{' '}\n        </Route>\n\n        <Route exact path=\"/Application/:id\">\n          {' '}\n          <Application />{' '}\n        </Route>\n        <Route exact path=\"/ApplicationList\">\n          {' '}\n          <ApplicationList />{' '}\n        </Route>\n\n        <Route exact path=\"/AddPayroll\">\n          {' '}\n          <AddPayroll />{' '}\n        </Route>\n        <Route exact path=\"/UpdatePayroll/:id\">\n          {' '}\n          <UpdatePayroll />{' '}\n        </Route>\n        <Route exact path=\"/PayrollHistory\">\n          {' '}\n          <PayrollHistory />{' '}\n        </Route>\n\n        <Route exact path=\"/PaymentPolicy\">\n          {' '}\n          <PaymentPolicy />{' '}\n        </Route>\n        <Route exact path=\"/UpdatePolicy\">\n          {' '}\n          <UpdatePolicy />{' '}\n        </Route>\n        <Route path=\"*\" component={() => '404 NOT FOUND'} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import 'chakraprovider' component\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}